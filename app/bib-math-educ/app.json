[{"name":"app.R","content":"# Library ----\r\nlibrary(shiny)\r\nlibrary(bslib)\r\nlibrary(tidyverse)\r\nlibrary(plotly)\r\nlibrary(sna)\r\nlibrary(GGally)\r\nlibrary(network)\r\n\r\n# Data ----\r\nload(url(\"https://raw.githubusercontent.com/ydkristanto/bib-math-educ/main/datasets/bib_data_simple.RData\"))\r\n\r\n# Links ----\r\nothers_link <- tags$a(\r\n  shiny::icon(\"shapes\"),\r\n  \"Others\",\r\n  href = \"https://people.usd.ac.id/~ydkristanto/index.php/media-pengajaran/shiny-stat-dan-id/\",\r\n  target = \"_blank\"\r\n)\r\ngithub_link <- tags$a(\r\n  shiny::icon(\"github\"),\r\n  \"Github\",\r\n  href = \"https://github.com/ydkristanto/bib-math-educ\",\r\n  target = \"_blank\"\r\n)\r\n\r\n# User interface ----\r\nui <- page_navbar(\r\n  title = \"Bibliometric Analysis\",\r\n  id = \"bib_analysis\",\r\n  ## Sidebar ----\r\n  sidebar = sidebar(\r\n    accordion(\r\n      ### Analysis ----\r\n      accordion_panel(\r\n        title = \"Analysis\",\r\n        selectInput(\r\n          \"analysis\",\r\n          div(\"Show:\", style = \"font-weight: bold;\"),\r\n          choices = c(\r\n            \"Authors\",\r\n            \"Citations count\",\r\n            \"Words\",\r\n            \"Co-occurrence network\",\r\n            \"Co-authors network\"\r\n          ),\r\n          selected = \"Authors\"\r\n        )\r\n      ),\r\n      ### Filter ----\r\n      accordion_panel(\r\n        title = \"Filter\",\r\n        checkboxGroupInput(\r\n          \"pub_name\",\r\n          div(\"Publication name:\", style = \"font-weight: bold;\"),\r\n          choices = c(\r\n            \"Educ. Stud. Math.\" = \"EDUC. STUD. MATH.\",\r\n            \"ZDM - Math. Educ.\" = \"ZDM-MATH. EDUC.\",\r\n            \"J. Res. Math. Educ.\" = \"J. RES. MATH. EDUC.\",\r\n            \"Int. J. Sci. Math. Educ.\" = \"INT. J. SCI. MATH. EDUC.\",\r\n            \"J. Math. Teach. Educ.\" = \"J. MATH. TEACH. EDUC.\",\r\n            \"Math. Think. Learn.\" = \"MATH. THINK. LEARN.\",\r\n            \"Ensen. Cienc.\" = \"ENSEN. CIENC.\",\r\n            \"Rev. Latinoam. Investig. Mat. Educ.\" = \"REV. LATINOAM. INVESTIG. MAT. EDUC.\",\r\n            \"Eurasia J. Math. Sci. Technol. Educ.\" = \"EURASIA J. MATH. SCI. TECHNOL. EDUC.\",\r\n            \"Bolema: Math. Educ. Bull.\" = \"BOLEMA-MATH. EDUC. BULL.\"\r\n          ),\r\n          selected = c(\r\n            \"EDUC. STUD. MATH.\",\r\n            \"ZDM-MATH. EDUC.\",\r\n            \"J. RES. MATH. EDUC.\"\r\n          )\r\n        ),\r\n        sliderInput(\r\n          \"year\",\r\n          div(\"Year\", style = \"font-weight: bold;\"),\r\n          min = 1986, max = 2024,\r\n          value = c(2014, 2024), step = 1,\r\n          ticks = FALSE,\r\n          sep = \"\"\r\n        ),\r\n        textInput(\r\n          \"authors\",\r\n          div(\"Author names contains (e.g. Cai):\", style = \"font-weight: bold;\")\r\n        ),\r\n        textInput(\r\n          \"title\",\r\n          div(\"Title contains (e.g. mathematics):\", style = \"font-weight: bold;\")\r\n        ),\r\n        textInput(\r\n          \"abstract\",\r\n          div(\"Abstract contains (e.g. reasoning):\", style = \"font-weight: bold;\")\r\n        ),\r\n        textInput(\r\n          \"keywords\",\r\n          div(\"Keywords contains (e.g. problem solving):\", style = \"font-weight: bold;\")\r\n        )\r\n      ),\r\n      multiple = FALSE,\r\n      open = \"Analysis\"\r\n    )\r\n  ),\r\n  ## Explorer ----\r\n  nav_panel(\r\n    title = \"Explorer\",\r\n    card(\r\n      card_header(\r\n        \"Plot\",\r\n        popover(\r\n          trigger = icon(\"gear\"),\r\n          title = \"Pengaturan Plot\",\r\n          conditionalPanel(\r\n            \"input.analysis == 'Authors' | input.analysis == 'Citations count'\",\r\n            numericInput(\r\n              \"author_count\",\r\n              div(\"Number of authors:\", style = \"font-weight: bold;\"),\r\n              value = 10,\r\n              min = 2,\r\n              max = 20\r\n            )\r\n          ),\r\n          conditionalPanel(\r\n            \"input.analysis == 'Words'\",\r\n            selectInput(\r\n              \"field_words\",\r\n              div(\"Field:\", style = \"font-weight: bold;\"),\r\n              c(\"Title\", \"Abstract\", \"Keywords\"),\r\n              selected = \"Keywords\"\r\n            ),\r\n            selectInput(\r\n              \"chart_words\",\r\n              div(\"Chart:\", style = \"font-weight: bold;\"),\r\n              c(\"Bar chart\", \"Trendline\"),\r\n              selected = \"Bar chart\"\r\n            )\r\n          ),\r\n          conditionalPanel(\r\n            \"input.analysis == 'Co-occurrence network' | input.analysis == 'Co-authors network'\",\r\n            numericInput(\r\n              \"node_count\",\r\n              div(\"Number of nodes:\", style = \"font-weight: bold;\"),\r\n              value = 100,\r\n              min = 1,\r\n              max = 200\r\n            ),\r\n            numericInput(\r\n              \"node_labelled\",\r\n              div(\"Number of labelled nodes:\", style = \"font-weight: bold;\"),\r\n              value = 10,\r\n              min = 1,\r\n              max = 20\r\n            )\r\n          ),\r\n          placement = \"left\"\r\n        ),\r\n        class = \"d-flex justify-content-between\"\r\n      ),\r\n      plotlyOutput(\"plot\"),\r\n      card_footer(\r\n        div(\r\n          \"Source: \",\r\n          tags$span(\r\n            a(\r\n              \"Web of Science Database\",\r\n              href = \"https://www.webofscience.com/wos\",\r\n              target = \"_blank\"\r\n            ),\r\n            style = \"font-weight: bold;\"\r\n          ),\r\n          \" (retrieved on 15 April 2024)\",\r\n          style = \"font-size: 0.75em;\"\r\n        )\r\n      ),\r\n      full_screen = TRUE\r\n    ),\r\n    icon = shiny::icon(\"chart-simple\")\r\n  ),\r\n  ## Information ----\r\n  nav_panel(\r\n    \"Information\",\r\n    layout_column_wrap(\r\n      width = 1 / 2,\r\n      navset_card_underline(\r\n        ### About ----\r\n        nav_panel(\r\n          title = \"About\",\r\n          p(\"This web-based application allows you to conduct bibliometric analysis in the field of mathematics education. Through this application, for example, you can identify prolific and relevant authors. Additionally, you can also identify research trends in the field of mathematics education.\")\r\n        ),\r\n        nav_panel(\r\n          ### Tools ----\r\n          title = \"Tools\",\r\n          p(\"This dashboard was developed using the \", a(\"R programming language\", href = \"https://www.r-project.org/\", target = \"_blank\"), \" and the \", a(\"{Shiny}\", href = \"https://CRAN.R-project.org/package=shiny\", target = \"_blank\"), \" package. The \", a(\"{shinylive}\", href = \"https://CRAN.R-project.org/package=shinylive\", target = \"_blank\"), \" package was utilized to export this application so it can be run in a web browser without a separate R server. The dashboard layout is structured using \", a(\"{bslib}.\", href = \"https://CRAN.R-project.org/package=bslib\", target = \"_blank\")),\r\n          p(\"The \", a(\"{network}\", href = \"https://CRAN.R-project.org/package=network\", target = \"_blank\"), \" and \", a(\"{sna}\", href = \"https://CRAN.R-project.org/package=sna\", target = \"_blank\"), \" packages were used to conduct network analysis [see, \", tooltip(a(\"Kristanto & Padmi (2020)\", href = \"https://doi.org/10.21831/pep.v24i2.33912\", target = \"_blank\"), \"Using network analysis for rapid, transparent, and rigorous thematic analysis: A case study of online distance learning\"), \" for a brief introduction on using this method in analyzing textual data]. All statistical charts in this dashboard are created using the \", a(\"{ggplot2},\", href = \"https://ggplot2.tidyverse.org\", target = \"_blank\"), \" \", a(\"{GGally},\", href = \"https://CRAN.R-project.org/package=GGally\", target = \"_blank\"), \" and \", a(\"{plotly}\", href = \"https://plotly-r.com\", target = \"_blank\"), \" packages.\")\r\n        ),\r\n        nav_panel(\r\n          ### Developer ----\r\n          title = \"Developer\",\r\n          p(\"The developer and maintainer of this application is \", a(\"Yosep Dwi Kristanto,\", href = \"https://people.usd.ac.id/~ydkristanto\", target = \"_blank\"), \" a lecturer and researcher in \", a(\"the Mathematics Education department\", href = \"https://usd.ac.id/s1pmat\", target = \"_blank\"), \" at \", a(\"Sanata Dharma University,\", href = \"https://www.usd.ac.id/\", target = \"_blank\"), \" Yogyakarta, Indonesia.\")\r\n        ),\r\n        nav_panel(\r\n          ### Source Code ----\r\n          title = \"Source Code\",\r\n          p(\"The source code of this application is available on \", a(\"GitHub repository.\", href = \"https://github.com/ydkristanto/bib-math-educ\", target = \"_blank\"), \" If you would like to report any issues or request additional features for this application, please \", a(\"create an issue\", href = \"https://github.com/ydkristanto/bib-math-educ/issues\", target = \"_blank\"), \" or, even better, submit \", a(\"a pull request\", href = \"https://github.com/ydkristanto/bib-math-educ/pulls\", target = \"_blank\"), \" in the repository.\")\r\n        )\r\n      ),\r\n      ### Data ----\r\n      card(\r\n        card_header(\"Data\"),\r\n        card_body(\r\n          p(\"The bibliographic data used in this application was obtained from the \", a(\"Web of Science database\", href = \"https://www.webofscience.com/wos\", target = \"_blank\"), \" (thanks to \", a(\"Johannes Kepler University,\", href = \"https://www.jku.at/en\", target = \"_blank\"), \" Linz, for providing the access.) The data was downloaded on 15 April 2024. It contains bibliographic information from scientific articles published in the following journals.\"),\r\n          tags$ul(\r\n            tags$li(a(\"Educational Studies in Mathematics\", href = \"https://link.springer.com/journal/10649\", target = \"_blank\")),\r\n            tags$li(a(\"ZDM - Mathematics Education\", href = \"https://link.springer.com/journal/11858\", target = \"_blank\")),\r\n            tags$li(a(\"Journal for Research in Mathematics Education\", href = \"https://pubs.nctm.org/view/journals/jrme/jrme-overview.xml\", target = \"_blank\")),\r\n            tags$li(a(\"International Journal of Science and Mathematics Education\", href = \"https://link.springer.com/journal/10763\", target = \"_blank\")),\r\n            tags$li(a(\"Journal of Mathematics Teacher Education\", href = \"https://link.springer.com/journal/10857\", target = \"_blank\")),\r\n            tags$li(a(\"Mathematical Thinking and Learning\", href = \"https://www.tandfonline.com/journals/hmtl20\", target = \"_blank\")),\r\n            tags$li(a(\"Enseñanza de las Ciencias\", href = \"https://ensciencias.uab.es/\", target = \"_blank\")),\r\n            tags$li(a(\"Revista Latinoamericana de Investigación en Matemática Educativa - RELIME\", href = \"https://www.relime.org/index.php/relime\", target = \"_blank\")),\r\n            tags$li(a(\"Eurasia Journal of Mathematics Science and Technology Education\", href = \"https://www.ejmste.com/\", target = \"_blank\")),\r\n            tags$li(a(\"Bolema - Boletim de Educação Matemática\", href = \"https://www.periodicos.rc.biblioteca.unesp.br/index.php/bolema\", target = \"_blank\"))\r\n          )\r\n        )\r\n      )\r\n    ),\r\n    icon = shiny::icon(\"circle-info\")\r\n  ),\r\n  nav_spacer(),\r\n  ## Nav menu ----\r\n  nav_menu(\r\n    title = \"Links\",\r\n    nav_item(others_link),\r\n    nav_item(github_link),\r\n    icon = shiny::icon(\"link\"),\r\n    align = \"right\"\r\n  )\r\n)\r\n\r\n# Server ----\r\nserver <- function(input, output, session) {\r\n  ## Filter data ----\r\n  bib_data <- reactive({\r\n    source <- input$pub_name\r\n    minyear <- input$year[1]\r\n    maxyear <- input$year[2]\r\n    \r\n    # Apply filter\r\n    dat <- bib_data_simple %>% \r\n      filter(\r\n        source_abbr %in% source,\r\n        year >= minyear,\r\n        year <= maxyear\r\n      )\r\n    \r\n    # Filter by authors\r\n    if (!is.null(input$authors) && input$authors != \"\") {\r\n      authors_input <- input$authors %>% \r\n        as.character() %>% \r\n        toupper()\r\n      dat <- dat %>% \r\n        filter(str_detect(authors, authors_input))\r\n    }\r\n    \r\n    # Filter by title\r\n    if (!is.null(input$title) && input$title != \"\") {\r\n      title_input <- input$title %>% \r\n        as.character() %>% \r\n        toupper()\r\n      dat <- dat %>% \r\n        filter(str_detect(title, title_input))\r\n    }\r\n    \r\n    # Filter by abstract\r\n    if (!is.null(input$abstract) && input$abstract != \"\") {\r\n      abstract_input <- input$abstract %>% \r\n        as.character() %>% \r\n        toupper()\r\n      dat <- dat %>% \r\n        filter(str_detect(abstract, abstract_input))\r\n    }\r\n    \r\n    # Filter by keywords\r\n    if (!is.null(input$keywords) && input$keywords != \"\") {\r\n      keywords_input <- input$keywords %>% \r\n        as.character() %>% \r\n        toupper()\r\n      dat <- dat %>% \r\n        filter(str_detect(author_keywords, keywords_input))\r\n    }\r\n    \r\n    dat\r\n  })\r\n  \r\n  ## plot ----\r\n  output$plot <- renderPlotly({\r\n    analysis_input <- input$analysis\r\n    author_count <- input$author_count\r\n    node_count <- input$node_count\r\n    node_labelled <- input$node_labelled\r\n    \r\n    ### Most relevant authors ----\r\n    if(analysis_input == \"Authors\") {\r\n      data <- bib_data()$authors %>%\r\n        str_split(\";\") %>%\r\n        unlist() %>%\r\n        table() %>%\r\n        as_tibble() %>%\r\n        arrange(-n) %>%\r\n        filter(str_detect(., \"ANONYMOUS\", negate = TRUE)) %>% \r\n        head(author_count)\r\n      names(data)[1] <- \"author\"\r\n      plot0 <- data %>% \r\n        mutate(author = fct_reorder(author, n)) %>%\r\n        ggplot(aes(x = author, y = n)) +\r\n        geom_col(aes(fill = n), show.legend = FALSE) +\r\n        theme_minimal() +\r\n        theme(\r\n          plot.title = element_text(\r\n            face = \"bold\",\r\n            hjust = .5\r\n          ),\r\n          axis.title.y = element_blank()\r\n        ) +\r\n        labs(\r\n          title = \"Most Relevant Authors\",\r\n          y = \"Document count\"\r\n        ) +\r\n        coord_flip()\r\n      plot <- ggplotly(plot0)\r\n    } else if(analysis_input == \"Citations count\") {\r\n      ### Most global cited authors ----\r\n      data <- bib_data() %>% \r\n        separate_longer_delim(authors, delim = \";\") %>% \r\n        group_by(authors) %>% \r\n        summarise(citation = sum(times_cited)) %>% \r\n        arrange(-citation) %>% \r\n        head(author_count)\r\n      plot0 <- data %>% \r\n        mutate(authors = fct_reorder(authors, citation)) %>%\r\n        ggplot(aes(x = authors, y = citation)) +\r\n        geom_col(aes(fill = citation), show.legend = FALSE) +\r\n        theme_minimal() +\r\n        theme(\r\n          plot.title = element_text(\r\n            face = \"bold\",\r\n            hjust = .5\r\n          ),\r\n          axis.title.y = element_blank()\r\n        ) +\r\n        labs(\r\n          title = \"Most Global Cited Authors\",\r\n          y = \"Citation count\"\r\n        ) +\r\n        coord_flip()\r\n      plot <- ggplotly(plot0)\r\n    } else if(analysis_input == \"Words\" && \r\n              input$chart_words == \"Bar chart\" &&\r\n              input$field_words == \"Keywords\") {\r\n      ### Most frequent words ----\r\n      data <- bib_data() %>%\r\n        select(author_keywords) %>% \r\n        separate_longer_delim(author_keywords, delim = \"; \") %>% \r\n        group_by(author_keywords) %>% \r\n        summarise(n = n()) %>% \r\n        filter(!is.na(author_keywords)) %>% \r\n        arrange(-n) %>% \r\n        head(10)\r\n      plot0 <- data %>% \r\n        mutate(author_keywords = fct_reorder(author_keywords, n)) %>% \r\n        ggplot(aes(x = author_keywords, y = n)) +\r\n        geom_col(aes(fill = n), show.legend = FALSE) +\r\n        theme_minimal() +\r\n        theme(\r\n          plot.title = element_text(\r\n            face = \"bold\",\r\n            hjust = .5\r\n          ),\r\n          axis.title.y = element_blank()\r\n        ) +\r\n        labs(\r\n          title = \"Most Frequent Words\",\r\n          y = \"Count\"\r\n        ) +\r\n        coord_flip()\r\n      plot <- ggplotly(plot0)\r\n    } else if(analysis_input == \"Words\" && \r\n              input$chart_words == \"Trendline\" &&\r\n              input$field_words == \"Keywords\") {\r\n      ### Words frequency over time ----\r\n      maxyear <- input$year[2]\r\n      minyear <- maxyear - 10\r\n      \r\n      data_filter <- bib_data() %>%\r\n        select(author_keywords) %>% \r\n        separate_longer_delim(author_keywords, delim = \"; \") %>% \r\n        group_by(author_keywords) %>% \r\n        summarise(n = n()) %>% \r\n        filter(!is.na(author_keywords)) %>% \r\n        arrange(-n) %>% \r\n        head(5)\r\n      data <- bib_data() %>% \r\n        select(year, author_keywords) %>% \r\n        separate_longer_delim(author_keywords, delim = \"; \") %>% \r\n        group_by(year, author_keywords) %>% \r\n        summarise(n = n()) %>% \r\n        filter(!is.na(author_keywords)) %>% \r\n        arrange(-year, -n) %>% \r\n        filter(\r\n          author_keywords %in% data_filter$author_keywords,\r\n          year >= minyear,\r\n          year <= maxyear\r\n        )\r\n      plot0 <- data %>% \r\n        ggplot(aes(x = year, y = n)) +\r\n        geom_line(aes(group = author_keywords, color = author_keywords)) +\r\n        scale_color_discrete(name = \"Author Keyword\") +\r\n        theme_minimal() +\r\n        theme(\r\n          legend.position = \"bottom\",\r\n          plot.title = element_text(\r\n            face = \"bold\",\r\n            hjust = .5\r\n          )\r\n        ) +\r\n        labs(\r\n          title = \"Words Frequency Over Time\",\r\n          x = \"Year\",\r\n          y = \"Count\"\r\n        )\r\n      plot <- ggplotly(plot0)\r\n    } else if(analysis_input == \"Words\" && \r\n              input$chart_words == \"Bar chart\" &&\r\n              input$field_words == \"Title\") {\r\n      ### Most frequent words ----\r\n      data <- bib_data() %>%\r\n        select(title) %>% \r\n        separate_longer_delim(title, delim = \" \") %>% \r\n        group_by(title) %>% \r\n        summarise(n = n()) %>% \r\n        filter(!(title %in% toupper(stop_words))) %>% \r\n        arrange(-n) %>% \r\n        head(10)\r\n      plot0 <- data %>% \r\n        mutate(title = fct_reorder(title, n)) %>% \r\n        ggplot(aes(x = title, y = n)) +\r\n        geom_col(aes(fill = n), show.legend = FALSE) +\r\n        theme_minimal() +\r\n        theme(\r\n          plot.title = element_text(\r\n            face = \"bold\",\r\n            hjust = .5\r\n          ),\r\n          axis.title.y = element_blank()\r\n        ) +\r\n        labs(\r\n          title = \"Most Frequent Words\",\r\n          y = \"Count\"\r\n        ) +\r\n        coord_flip()\r\n      plot <- ggplotly(plot0)\r\n    } else if(analysis_input == \"Words\" && \r\n              input$chart_words == \"Trendline\" &&\r\n              input$field_words == \"Title\") {\r\n      ### Words frequency over time ----\r\n      maxyear <- input$year[2]\r\n      minyear <- maxyear - 10\r\n      data_filter <- bib_data() %>%\r\n        select(title) %>% \r\n        separate_longer_delim(title, delim = \" \") %>% \r\n        filter(!(title %in% toupper(stop_words))) %>% \r\n        group_by(title) %>% \r\n        summarise(n = n()) %>% \r\n        filter(!is.na(title)) %>% \r\n        arrange(-n) %>% \r\n        head(5)\r\n      \r\n      data <- bib_data() %>% \r\n        select(title, year) %>% \r\n        separate_longer_delim(title, delim = \" \") %>% \r\n        group_by(year, title) %>% \r\n        summarise(n = n()) %>% \r\n        filter(!(title %in% toupper(stop_words))) %>% \r\n        filter(\r\n          title %in% data_filter$title,\r\n          year >= minyear,\r\n          year <= maxyear\r\n        )\r\n      \r\n      plot0 <- data %>% \r\n        ggplot(aes(x = year, y = n)) +\r\n        geom_line(aes(group = title, color = title)) +\r\n        scale_color_discrete(name = \"Word\") +\r\n        theme_minimal() +\r\n        theme(\r\n          plot.title = element_text(\r\n            face = \"bold\",\r\n            hjust = .5\r\n          ),\r\n          legend.position = \"bottom\"\r\n        ) +\r\n        labs(\r\n          title = \"Words Frequency Over Time\",\r\n          x = \"Year\",\r\n          y = \"Count\"\r\n        )\r\n      plot <- ggplotly(plot0)\r\n      \r\n    } else if(analysis_input == \"Words\" && \r\n              input$chart_words == \"Bar chart\" &&\r\n              input$field_words == \"Abstract\") {\r\n      ### Most frequent words ----\r\n      data <- bib_data() %>%\r\n        select(abstract) %>% \r\n        separate_longer_delim(abstract, delim = \" \") %>% \r\n        group_by(abstract) %>% \r\n        summarise(n = n()) %>% \r\n        filter(!(abstract %in% toupper(stop_words))) %>% \r\n        arrange(-n) %>% \r\n        head(10)\r\n      plot0 <- data %>% \r\n        mutate(abstract = fct_reorder(abstract, n)) %>% \r\n        ggplot(aes(x = abstract, y = n)) +\r\n        geom_col(aes(fill = n), show.legend = FALSE) +\r\n        theme_minimal() +\r\n        theme(\r\n          plot.title = element_text(\r\n            face = \"bold\",\r\n            hjust = .5\r\n          ),\r\n          axis.title.y = element_blank()\r\n        ) +\r\n        labs(\r\n          title = \"Most Frequent Words\",\r\n          y = \"Count\"\r\n        ) +\r\n        coord_flip()\r\n      plot <- ggplotly(plot0)\r\n    } else if(analysis_input == \"Words\" && \r\n              input$chart_words == \"Trendline\" &&\r\n              input$field_words == \"Abstract\") {\r\n      ### Words frequency over time ----\r\n      maxyear <- input$year[2]\r\n      minyear <- maxyear - 10\r\n      data_filter <- bib_data() %>%\r\n        select(abstract) %>% \r\n        separate_longer_delim(abstract, delim = \" \") %>% \r\n        filter(!(abstract %in% toupper(stop_words))) %>% \r\n        group_by(abstract) %>% \r\n        summarise(n = n()) %>% \r\n        filter(!is.na(abstract)) %>% \r\n        arrange(-n) %>% \r\n        head(5)\r\n      \r\n      data <- bib_data() %>% \r\n        select(abstract, year) %>% \r\n        separate_longer_delim(abstract, delim = \" \") %>% \r\n        group_by(year, abstract) %>% \r\n        summarise(n = n()) %>% \r\n        filter(!(abstract %in% toupper(stop_words))) %>% \r\n        filter(\r\n          abstract %in% data_filter$abstract,\r\n          year >= minyear,\r\n          year <= maxyear\r\n        )\r\n      \r\n      plot0 <- data %>% \r\n        ggplot(aes(x = year, y = n)) +\r\n        geom_line(aes(group = abstract, color = abstract)) +\r\n        scale_color_discrete(name = \"Word\") +\r\n        theme_minimal() +\r\n        theme(\r\n          plot.title = element_text(\r\n            face = \"bold\",\r\n            hjust = .5\r\n          ),\r\n          legend.position = \"bottom\"\r\n        ) +\r\n        labs(\r\n          title = \"Words Frequency Over Time\",\r\n          x = \"Year\",\r\n          y = \"Count\"\r\n        )\r\n      plot <- ggplotly(plot0)\r\n    } else if(input$analysis == \"Co-occurrence network\") {\r\n      ### Co-occurrence network ----\r\n      # Data preparation\r\n      bib_data <- bib_data()$author_keywords %>%\r\n        str_split(\"; \") %>%\r\n        lapply(function(x) {\r\n          expand.grid(x, x, w = 1 / length(x), stringsAsFactors = FALSE)\r\n        }) %>%\r\n        bind_rows() %>% \r\n        as_tibble()\r\n      \r\n      # Sorting bib_data\r\n      bib_data <- apply(bib_data[, -3], 1, str_sort) %>%\r\n        t() %>%\r\n        data.frame(stringsAsFactors = FALSE) %>%\r\n        mutate(w = bib_data$w) %>% \r\n        as_tibble()\r\n      \r\n      # Simplifying bib_data\r\n      bib_data <- bib_data %>% \r\n        group_by(X1, X2) %>%\r\n        summarise(w = sum(w), .groups = \"drop\") %>%\r\n        filter(X1 != X2) %>% \r\n        distinct() %>% \r\n        rename(\r\n          from = X1,\r\n          to = X2,\r\n          weight = w\r\n        )\r\n      \r\n      # Filter\r\n      top_keywords <- bib_data() %>% \r\n        select(author_keywords) %>% \r\n        separate_longer_delim(\r\n          cols = author_keywords, delim = \"; \"\r\n        ) %>% \r\n        group_by(author_keywords) %>% \r\n        summarise(n = n()) %>% \r\n        filter(!is.na(author_keywords)) %>% \r\n        arrange(-n) %>% \r\n        head(node_count)\r\n      \r\n      # Apply filter\r\n      bib_data <- bib_data %>% \r\n        filter(\r\n          from %in% top_keywords$author_keywords,\r\n          to %in% top_keywords$author_keywords\r\n        ) %>% \r\n        mutate(\r\n          from = tolower(from),\r\n          to = tolower(to)\r\n        )\r\n      \r\n      # Creating network objects\r\n      node_list <- top_keywords %>% \r\n        rowid_to_column(\"id\") %>% \r\n        rename(\r\n          label = author_keywords,\r\n          occurrence = n\r\n        ) %>% \r\n        mutate(\r\n          label = tolower(label),\r\n          label_w = ifelse(id <= node_labelled, label, NA)\r\n        )\r\n      \r\n      edge_list <- left_join(\r\n        bib_data, node_list, by = c(\"from\" = \"label\")\r\n      ) %>% \r\n        select(-from, -occurrence, -label_w) %>% \r\n        rename(from = id)\r\n      \r\n      edge_list <- edge_list %>% \r\n        left_join(node_list, by = c(\"to\" = \"label\")) %>% \r\n        select(-to, -occurrence, -label_w) %>% \r\n        rename(to = id)\r\n      \r\n      edge_list <- edge_list %>% \r\n        select(from, to, weight)\r\n      \r\n      # Creating network objects\r\n      bib_network <- network(\r\n        edge_list,\r\n        vertex.attr = node_list,\r\n        directed = FALSE,\r\n        matrix.type = \"edgelist\",\r\n        ignore.eval = FALSE\r\n      )\r\n      \r\n      # Network visualization\r\n      plot0 <- ggnet2(\r\n        bib_network,\r\n        node.size = \"occurrence\",\r\n        node.color = \"label\",\r\n        label = \"label_w\",\r\n        edge.size = \"weight\",\r\n        edge.color = \"gray\",\r\n        edge.alpha = .1\r\n      ) +\r\n        theme(\r\n          plot.title = element_text(\r\n            face = \"bold\",\r\n            hjust = .5\r\n          )\r\n        ) +\r\n        labs(title = \"Co-occurrence Network\")\r\n      \r\n      plot <- ggplotly(\r\n        plot0,\r\n        tooltip = c(\"color\", \"size\"),\r\n        legend = \"none\"\r\n      ) %>% \r\n        style(showlegend = FALSE)\r\n    } else if(input$analysis == \"Co-authors network\") {\r\n      ### Collaboration network ----\r\n      # Data preparation\r\n      bib_data <- bib_data()$authors %>%\r\n        str_split(\";\") %>%\r\n        lapply(function(x) {\r\n          expand.grid(x, x, w = 1 / length(x), stringsAsFactors = FALSE)\r\n        }) %>%\r\n        bind_rows() %>% \r\n        as_tibble()\r\n      \r\n      # Sorting bib_data\r\n      bib_data <- apply(bib_data[, -3], 1, str_sort) %>%\r\n        t() %>%\r\n        data.frame(stringsAsFactors = FALSE) %>%\r\n        mutate(w = bib_data$w) %>% \r\n        as_tibble()\r\n      \r\n      # Simplifying bib_data\r\n      bib_data <- bib_data %>% \r\n        group_by(X1, X2) %>%\r\n        summarise(w = sum(w), .groups = \"drop\") %>%\r\n        filter(X1 != X2) %>% \r\n        distinct() %>% \r\n        rename(\r\n          from = X1,\r\n          to = X2,\r\n          weight = w\r\n        )\r\n      \r\n      # Filter\r\n      top_authors <- bib_data() %>% \r\n        select(authors) %>% \r\n        separate_longer_delim(\r\n          cols = authors, delim = \";\"\r\n        ) %>% \r\n        group_by(authors) %>% \r\n        summarise(n = n()) %>% \r\n        filter(!is.na(authors)) %>% \r\n        arrange(-n) %>% \r\n        head(node_count)\r\n      \r\n      # Apply filter\r\n      bib_data <- bib_data %>% \r\n        filter(\r\n          from %in% top_authors$authors,\r\n          to %in% top_authors$authors\r\n        ) %>% \r\n        mutate(\r\n          from = tolower(from),\r\n          to = tolower(to)\r\n        )\r\n      \r\n      # Creating network objects\r\n      node_list <- top_authors %>% \r\n        rowid_to_column(\"id\") %>% \r\n        rename(\r\n          label = authors,\r\n          occurrence = n\r\n        ) %>% \r\n        mutate(\r\n          label = tolower(label),\r\n          label_w = ifelse(id <= node_labelled, label, NA)\r\n        )\r\n      \r\n      edge_list <- left_join(\r\n        bib_data, node_list, by = c(\"from\" = \"label\")\r\n      ) %>% \r\n        select(-from, -occurrence, -label_w) %>% \r\n        rename(from = id)\r\n      \r\n      edge_list <- edge_list %>% \r\n        left_join(node_list, by = c(\"to\" = \"label\")) %>% \r\n        select(-to, -occurrence, -label_w) %>% \r\n        rename(to = id)\r\n      \r\n      edge_list <- edge_list %>% \r\n        select(from, to, weight)\r\n      \r\n      # Creating network objects\r\n      bib_network <- network(\r\n        edge_list,\r\n        vertex.attr = node_list,\r\n        directed = FALSE,\r\n        matrix.type = \"edgelist\",\r\n        ignore.eval = FALSE\r\n      )\r\n      \r\n      # Network visualization\r\n      plot0 <- ggnet2(\r\n        bib_network,\r\n        node.size = \"occurrence\",\r\n        node.color = \"label\",\r\n        label = \"label_w\",\r\n        edge.size = \"weight\",\r\n        edge.color = \"gray\",\r\n        edge.alpha = .1\r\n      ) +\r\n        theme(\r\n          plot.title = element_text(\r\n            face = \"bold\",\r\n            hjust = .5\r\n          )\r\n        ) +\r\n        labs(title = \"Collaboration Network\")\r\n      \r\n      plot <- ggplotly(\r\n        plot0,\r\n        tooltip = c(\"color\", \"size\"),\r\n        legend = \"none\"\r\n      ) %>% \r\n        style(showlegend = FALSE)\r\n    }\r\n    \r\n    plot\r\n  })\r\n}\r\n\r\n# App ----\r\nshinyApp(ui, server)\r\n","type":"text"}]
