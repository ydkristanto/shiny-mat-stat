[{"name":"app.R","content":"# Paket ----\r\nlibrary(shiny)\r\nlibrary(tidyverse)\r\n\r\n# UI ----\r\nui <- navbarPage(\r\n  title = \"Hukum Bilangan Besar\",\r\n  tabPanel(\r\n    \"Eksplorasi\",\r\n    sidebarLayout(\r\n      sidebarPanel(\r\n        wellPanel(\r\n          ## Input statistik sampel ----\r\n          sliderInput(\"n_sampel\", \"Ukuran sampel:\",\r\n            min = 1, max = 1000,\r\n            value = 10\r\n          ),\r\n          sliderInput(\"k_sampel\", \"Banyak sampel:\",\r\n            min = 1, max = 5,\r\n            value = 1, step = 1\r\n          )\r\n        ),\r\n        wellPanel(\r\n          ## Input parameter populasi ----\r\n          selectInput(\"dist_pop\", \"Distribusi populasi:\",\r\n            choices = c(\r\n              \"Normal\" = \"normal\",\r\n              \"Binomial\" = \"binom\",\r\n              \"Seragam\" = \"seragam\",\r\n              \"Gamma\" = \"gamma\"\r\n            ),\r\n            selected = \"normal\"\r\n          ),\r\n          conditionalPanel(\r\n            \"input.dist_pop == 'normal'\",\r\n            sliderInput(\"rerata_pop\", \"Rerata:\",\r\n              min = 40, max = 60, value = 50,\r\n              step = 1\r\n            ),\r\n            sliderInput(\"sd_pop\", \"Simpangan baku:\",\r\n              min = 1, max = 20, value = 10,\r\n              step = 1\r\n            )\r\n          ),\r\n          conditionalPanel(\r\n            \"input.dist_pop == 'binom'\",\r\n            sliderInput(\"ukuran_pop\", \"Ukuran eksperimen:\",\r\n              min = 1, max = 20, value = 10,\r\n              step = 1\r\n            ),\r\n            sliderInput(\"peluang_pop\", \"Peluang sukses:\",\r\n              min = 0, max = 1, value = .5\r\n            )\r\n          ),\r\n          conditionalPanel(\r\n            \"input.dist_pop == 'seragam'\",\r\n            sliderInput(\"minmaks_pop\", \"Minimum dan maksimum:\",\r\n              min = 30, max = 70, value = c(40, 60),\r\n              step = 1\r\n            )\r\n          ),\r\n          conditionalPanel(\r\n            \"input.dist_pop == 'gamma'\",\r\n            sliderInput(\"bentuk_pop\", \"Bentuk:\",\r\n              min = .5, max = 5, value = 1.5,\r\n              step = .5\r\n            ),\r\n            sliderInput(\"skala_pop\", \"Skala:\",\r\n              min = 1, max = 10, value = 5,\r\n              step = .25\r\n            )\r\n          )\r\n        )\r\n      ),\r\n      mainPanel(\r\n        tabsetPanel(\r\n          ## Tab tren rerata ----\r\n          tabPanel(\r\n            \"Tren\",\r\n            br(),\r\n            plotOutput(\"plot_tren\"),\r\n            textOutput(\"teks_tren\"),\r\n            br()\r\n          ),\r\n          ## Tab distribusi sampel ----\r\n          tabPanel(\r\n            \"Distribusi Sampel\",\r\n            br(),\r\n            plotOutput(\"plot_dist\"),\r\n            textOutput(\"teks_dist\"),\r\n            br()\r\n          ),\r\n          ## Tab tabel data sampel ----\r\n          tabPanel(\r\n            \"Data sampel\",\r\n            br(),\r\n            div(textOutput(\"label_tabel_dist\"), align = \"center\"),\r\n            br(),\r\n            DT::dataTableOutput(\"tabel_dist\"),\r\n            br()\r\n          )\r\n        )\r\n      )\r\n    )\r\n  ),\r\n  tabPanel(\r\n    \"Informasi\",\r\n    sidebarLayout(\r\n      sidebarPanel(\r\n        wellPanel(\r\n          div(h4(\"Deskripsi\",\r\n            style = \"font-size: inherit;\r\n                             font-weight: bold\"\r\n          )),\r\n          div(p(\"Aplikasi Shiny ini mendemonstrasikan Hukum Bilangan Besar.\"))\r\n        ),\r\n        wellPanel(\r\n          div(h4(\"Kode sumber\",\r\n            style = \"font-size: inherit;\r\n                             font-weight: bold\"\r\n          )),\r\n          div(p(\"Kode sumber aplikasi ini tersedia di\", a(\"repositori Github.\", href = \"https://github.com/ydkristanto/apl-hukum-bil-besar\", target = \"_blank\"), \"Jika Anda ingin melaporkan masalah atau meminta fitur tambahan terhadap aplikasi ini, silakan\", a(\"buat sebuah isu\", href = \"https://github.com/ydkristanto/apl-hukum-bil-besar/issues\", target = \"_blank\"), \"atau lebih baik lagi\", a(\"minta penarikan\", href = \"https://github.com/ydkristanto/apl-hukum-bil-besar/pulls\", target = \"_blank\"), \"di repositori tersebut.\"))\r\n        ),\r\n        wellPanel(\r\n          div(h4(\"Lisensi\",\r\n            style = \"font-size: inherit;\r\n                             font-weight: bold\"\r\n          )),\r\n          div(\r\n            p(\"Lisensi MIT\"),\r\n            p(\"Copyright (c) 2024 Yosep Dwi Kristanto\")\r\n          )\r\n        )\r\n      ),\r\n      mainPanel(\r\n        div(h3(\"Aplikasi Shiny Hukum Bilangan Besar\")),\r\n        div(p(\"Aplikasi interaktif ini ditujukan untuk mendemonstrasikan Hukum Bilangan Besar. Berdasarkan hukum ini, rerata sampel akan mendekati rerata populasinya ketika ukuran sampel tersebut bertambah besar. Sebagai catatan, sampel-sampel tersebut merupakan sampel-sampel yang bebas dan diperoleh dari populasi yang sama.\"), align = \"justify\"),\r\n        hr(),\r\n        div(p(\"Aplikasi interaktif ini dikembangkan dengan menggunakan bahasa pemrogram\", a(\"R\", href = \"https://www.R-project.org/\", target = \"_blank\"), \"dan paket\", a(\"Shiny.\", href = \"https://CRAN.R-project.org/package=shiny\", target = \"_blank\"), \"Paket\", a(\"shinylive\", href = \"https://posit-dev.github.io/r-shinylive/\", target = \"_blank\"), \"digunakan untuk mengekspor aplikasi ini agar dapat dijalankan di peramban web tanpa peladen R yang terpisah.\"), align = \"justify\"),\r\n        div(p(\"Pengembang dan pemelihara aplikasi ini adalah\", a(\"Yosep Dwi Kristanto,\", href = \"https://people.usd.ac.id/~ydkristanto/\", target = \"_blank\"), \"seorang dosen dan peneliti di program studi\", a(\"Pendidikan Matematika,\", href = \"https://usd.ac.id/s1pmat\", target = \"_blank\"), a(\"Universitas Sanata Dharma,\", href = \"https://www.usd.ac.id/\", target = \"_blank\"), \"Yogyakarta.\"), align = \"justify\"),\r\n        hr(),\r\n        div(h4(\"Penafian tentang penggunaan AI:\",\r\n          style = \"font-size: inherit; font-weight: bold\"\r\n        )),\r\n        div(p(\"Perumusan kode-kode di balik aplikasi Shiny ini dibantu oleh kecerdasan buatan (AI) yang akurasinya selalu diawasi secara cermat oleh pengembang. Meskipun demikian, ide konseptual dan mendasar dari aplikasi ini orisinal dan dihasilkan oleh pengembang. Setiap potensi kesalahan atau keterbatasan dalam kode-kode tersebut menjadi tanggung jawab pengembang, dan bantuan AI diakui sebagai alat pendukung dalam proses pengembangan aplikasi ini.\")),\r\n        width = 6\r\n      )\r\n    )\r\n  )\r\n)\r\n\r\n# Peladen ----\r\nserver <- function(input, output) {\r\n  seed <- as.numeric(Sys.Date())\r\n  ## Membuat set sampel ----\r\n  membuat_set_sampel <- function(n, k, dist = \"normal\",\r\n                                 eks, pel, mean, sd, min, maks,\r\n                                 bentuk, skala) {\r\n    set.seed(seed)\r\n    if (dist == \"normal\") {\r\n      set_sampel <- tibble(\r\n        id_sampel = rep(1:k, each = n),\r\n        observasi = rep(1:n, k),\r\n        nilai = c(replicate(k, round(rnorm(n, mean = mean, sd = sd), 2)))\r\n      )\r\n    } else if (dist == \"binom\") {\r\n      set_sampel <- tibble(\r\n        id_sampel = rep(1:k, each = n),\r\n        observasi = rep(1:n, k),\r\n        nilai = c(replicate(k, rbinom(n, size = eks, prob = pel)))\r\n      )\r\n    } else if (dist == \"seragam\") {\r\n      set_sampel <- tibble(\r\n        id_sampel = rep(1:k, each = n),\r\n        observasi = rep(1:n, k),\r\n        nilai = c(replicate(k, round(runif(n, min = min, max = maks), 2)))\r\n      )\r\n    } else if (dist == \"gamma\") {\r\n      set_sampel <- tibble(\r\n        id_sampel = rep(1:k, each = n),\r\n        observasi = rep(1:n, k),\r\n        nilai = c(replicate(k, round(rgamma(n,\r\n          shape = bentuk,\r\n          scale = skala\r\n        ), 2)))\r\n      )\r\n    } else {\r\n      set_sampel <- tibble(\r\n        id_sampel = rep(1:k, each = n),\r\n        observasi = rep(1:n, k),\r\n        nilai = c(replicate(k, round(rnorm(n), 2)))\r\n      )\r\n    }\r\n\r\n    stat_sampel <- set_sampel %>%\r\n      group_by(id_sampel) %>%\r\n      mutate(\r\n        id_sampel = factor(id_sampel),\r\n        rerata = cumsum(nilai) / seq_along(nilai)\r\n      )\r\n\r\n    return(stat_sampel)\r\n  }\r\n\r\n  rep_membuat_set_sampel <- repeatable(membuat_set_sampel)\r\n\r\n  stat_sampel <- reactive({\r\n    data_stat_sampel <- membuat_set_sampel(\r\n      n = input$n_sampel,\r\n      k = input$k_sampel,\r\n      dist = input$dist_pop,\r\n      eks = input$ukuran_pop,\r\n      pel = input$peluang_pop,\r\n      mean = input$rerata_pop,\r\n      sd = input$sd_pop,\r\n      min = input$minmaks_pop[1],\r\n      maks = input$minmaks_pop[2],\r\n      bentuk = input$bentuk_pop,\r\n      skala = input$skala_pop\r\n    )\r\n\r\n    return(data_stat_sampel)\r\n  })\r\n\r\n  ## Plot tren rerata ----\r\n  output$plot_tren <- renderPlot({\r\n    data_stat_sampel <- stat_sampel()\r\n\r\n    dist <- input$dist_pop\r\n    if (dist == \"normal\") {\r\n      rerata_riil <- input$rerata_pop\r\n    } else if (dist == \"binom\") {\r\n      rerata_riil <- input$ukuran_pop * input$peluang_pop\r\n    } else if (dist == \"seragam\") {\r\n      rerata_riil <- (input$minmaks_pop[1] + input$minmaks_pop[2]) / 2\r\n    } else if (dist == \"gamma\") {\r\n      rerata_riil <- input$bentuk_pop * input$skala_pop\r\n    }\r\n\r\n    data_stat_sampel %>%\r\n      ggplot(aes(\r\n        x = observasi, y = rerata,\r\n        group = id_sampel, color = id_sampel\r\n      )) +\r\n      geom_hline(\r\n        yintercept = rerata_riil,\r\n        linewidth = 1,\r\n        linetype = \"dashed\"\r\n      ) +\r\n      geom_line(linewidth = 1) +\r\n      scale_color_brewer(\r\n        palette = \"Dark2\",\r\n        name = \"ID Sampel\"\r\n      ) +\r\n      theme_bw(base_size = 16) +\r\n      theme(\r\n        plot.title = element_text(face = \"bold\"),\r\n        legend.position = \"bottom\"\r\n      ) +\r\n      labs(\r\n        title = \"Tren Rerata Ketika Ukuran Sampel Naik\",\r\n        x = \"Observasi\", y = \"Rerata\"\r\n      )\r\n  })\r\n\r\n  ## Teks tren rerata ----\r\n  output$teks_tren <- renderText({\r\n    n <- input$n_sampel\r\n    k <- input$k_sampel\r\n\r\n    data_stat_sampel <- stat_sampel()\r\n    ringkasan_stat <- data_stat_sampel %>%\r\n      group_by(id_sampel) %>%\r\n      summarise(rerata = round(mean(nilai), 2))\r\n    vektor_rerata <- ringkasan_stat$rerata\r\n\r\n    if (k == 1) {\r\n      paste0(\"Gambar 1: Tren rerata sebuah sampel ketika ukurannya bertambah besar, dari 1 sampai \", n, \". Rerata terakhir nilai-nilai dalam sampel tersebut kurang lebih adalah \", vektor_rerata[1], \".\")\r\n    } else if (k == 2) {\r\n      paste0(\"Gambar 1: Tren rerata dua sampel ketika ukurannya bertambah besar, dari 1 sampai \", n, \". Rerata terakhir sampel-sampel tersebut secara berturut-turut kurang lebih sama dengan \", vektor_rerata[1], \" dan \", vektor_rerata[2], \".\")\r\n    } else if (k == 3) {\r\n      paste0(\"Gambar 1: Tren rerata tiga sampel ketika ukurannya bertambah besar, dari 1 sampai \", n, \". Rerata terakhir sampel-sampel tersebut secara berturut-turut kurang lebih sama dengan \", vektor_rerata[1], \", \", vektor_rerata[2], \", dan \", vektor_rerata[3], \".\")\r\n    } else if (k == 4) {\r\n      paste0(\"Gambar 1: Tren rerata empat sampel ketika ukurannya bertambah besar, dari 1 sampai \", n, \". Rerata terakhir sampel-sampel tersebut secara berturut-turut kurang lebih sama dengan \", vektor_rerata[1], \", \", vektor_rerata[2], \", \", vektor_rerata[3], \", dan \", vektor_rerata[4], \".\")\r\n    } else if (k == 5) {\r\n      paste0(\"Gambar 1: Tren rerata lima sampel ketika ukurannya bertambah besar, dari 1 sampai \", n, \". Rerata terakhir sampel-sampel tersebut secara berturut-turut kurang lebih sama dengan \", vektor_rerata[1], \", \", vektor_rerata[2], \", \", vektor_rerata[3], \", \", vektor_rerata[4], \", dan \", vektor_rerata[5], \".\")\r\n    } else {\r\n      \"Gambar 1: Tren rerata sampel ketika ukurannya bertambah besar.\"\r\n    }\r\n  })\r\n\r\n\r\n  ## Plot distribusi sampel ----\r\n  output$plot_dist <- renderPlot({\r\n    data_stat_sampel <- stat_sampel()\r\n    data_rerata <- data_stat_sampel %>%\r\n      group_by(id_sampel) %>%\r\n      summarize(rerata_sampel = mean(nilai))\r\n\r\n    dist <- input$dist_pop\r\n    if (dist == \"normal\") {\r\n      rerata_riil <- input$rerata_pop\r\n    } else if (dist == \"binom\") {\r\n      rerata_riil <- input$ukuran_pop * input$peluang_pop\r\n    } else if (dist == \"seragam\") {\r\n      rerata_riil <- (input$minmaks_pop[1] + input$minmaks_pop[2]) / 2\r\n    } else if (dist == \"gamma\") {\r\n      rerata_riil <- input$bentuk_pop * input$skala_pop\r\n    }\r\n\r\n    k <- input$k_sampel\r\n    if (k == 1) {\r\n      data_stat_sampel %>%\r\n        ggplot(aes(x = nilai)) +\r\n        geom_histogram(\r\n          aes(\r\n            y = after_stat(density),\r\n            fill = id_sampel\r\n          ),\r\n          color = \"white\", alpha = .4\r\n        ) +\r\n        geom_density(linewidth = 1.5, show.legend = FALSE) +\r\n        facet_grid(id_sampel ~ .) +\r\n        geom_vline(\r\n          data = data_rerata,\r\n          aes(\r\n            xintercept = rerata_sampel,\r\n            color = id_sampel\r\n          ),\r\n          linetype = \"dashed\", linewidth = 1,\r\n          show.legend = FALSE\r\n        ) +\r\n        geom_vline(\r\n          xintercept = rerata_riil,\r\n          linetype = \"dashed\", linewidth = 1,\r\n          show.legend = FALSE\r\n        ) +\r\n        theme_bw(base_size = 16) +\r\n        scale_fill_brewer(\r\n          palette = \"Dark2\",\r\n          name = \"ID Sampel\"\r\n        ) +\r\n        scale_color_brewer(palette = \"Dark2\") +\r\n        theme(\r\n          legend.position = \"bottom\",\r\n          plot.title = element_text(face = \"bold\"),\r\n          axis.title.y = element_blank(),\r\n          axis.text.y = element_blank(),\r\n          axis.ticks.y = element_blank()\r\n        ) +\r\n        labs(\r\n          title = paste0(\"Distribusi Data \", k, \" Sampel\"),\r\n          x = \"Nilai\"\r\n        )\r\n    } else {\r\n      data_stat_sampel %>%\r\n        ggplot(aes(x = nilai)) +\r\n        geom_histogram(\r\n          aes(\r\n            y = after_stat(density),\r\n            fill = id_sampel\r\n          ),\r\n          color = \"white\", alpha = .4\r\n        ) +\r\n        geom_density(linewidth = 1.5, show.legend = FALSE) +\r\n        facet_grid(id_sampel ~ .) +\r\n        geom_vline(\r\n          data = data_rerata,\r\n          aes(\r\n            xintercept = rerata_sampel,\r\n            color = id_sampel\r\n          ),\r\n          linetype = \"dashed\", linewidth = 1,\r\n          show.legend = FALSE\r\n        ) +\r\n        geom_vline(\r\n          xintercept = rerata_riil,\r\n          linetype = \"dashed\", linewidth = 1,\r\n          show.legend = FALSE\r\n        ) +\r\n        theme_bw(base_size = 16) +\r\n        scale_fill_brewer(\r\n          palette = \"Dark2\",\r\n          name = \"ID Sampel\"\r\n        ) +\r\n        scale_color_brewer(palette = \"Dark2\") +\r\n        theme(\r\n          legend.position = \"bottom\",\r\n          plot.title = element_text(face = \"bold\"),\r\n          axis.title.y = element_blank(),\r\n          axis.text.y = element_blank(),\r\n          axis.ticks.y = element_blank()\r\n        ) +\r\n        labs(\r\n          title = paste0(\"Distribusi Data \", k, \" Sampel\"),\r\n          x = \"Nilai\"\r\n        )\r\n    }\r\n  })\r\n\r\n  ## Teks distribusi sampel ----\r\n  output$teks_dist <- renderText({\r\n    n <- input$n_sampel\r\n    k <- input$k_sampel\r\n\r\n    data_stat_sampel <- stat_sampel()\r\n    ringkasan_stat <- data_stat_sampel %>%\r\n      group_by(id_sampel) %>%\r\n      summarise(rerata = round(mean(nilai), 2))\r\n    vektor_rerata <- ringkasan_stat$rerata\r\n\r\n    if (k == 1) {\r\n      paste0(\"Gambar 2: Distribusi data sebuah sampel yang berukuran \", n, \". Rerata sampel tersebut kurang lebih \", vektor_rerata[1], \".\")\r\n    } else if (k == 2) {\r\n      paste0(\"Gambar 2: Distribusi data dua sampel yang masing-masing ukurannya \", n, \". Rerata kedua sampel tersebut secara berturut-turut kurang lebih \", vektor_rerata[1], \" dan \", vektor_rerata[2], \".\")\r\n    } else if (k == 3) {\r\n      paste0(\"Gambar 2: Distribusi data tiga sampel yang berukuran \", n, \". Rerata ketiga sampel tersebut secara berturut-turut kurang lebih \", vektor_rerata[1], \", \", vektor_rerata[2], \", dan \", vektor_rerata[3], \".\")\r\n    } else if (k == 4) {\r\n      paste0(\"Gambar 2: Distribusi data empat sampel yang masing-masing ukurannya \", n, \". Rerata keempat sampel tersebut secara berturut-turut kurang lebih \", vektor_rerata[1], \", \", vektor_rerata[2], \", \", vektor_rerata[3], \", dan \", vektor_rerata[4], \".\")\r\n    } else if (k == 5) {\r\n      paste0(\"Gambar 2: Distribusi data lima sampel yang masing-masing berukuran \", n, \". Rerata kelima sampel tersebut secara berturut-turut kurang lebih sama dengan \", vektor_rerata[1], \", \", vektor_rerata[2], \", \", vektor_rerata[3], \", \", vektor_rerata[4], \", dan \", vektor_rerata[5], \".\")\r\n    } else {\r\n      paste0(\"Gambar 1: Distribusi sampel yang berukuran \", n, \".\")\r\n    }\r\n  })\r\n\r\n  ## Label tabel distribusi sampel\r\n  output$label_tabel_dist <- renderText({\r\n    k <- input$k_sampel\r\n    n <- input$n_sampel\r\n\r\n    if (k == 1) {\r\n      paste0(\"Tabel 1: Nilai dan rerata kumulatif sebuah sampel yang berukuran \", n, \".\")\r\n    } else {\r\n      paste0(\"Tabel 1: Nilai dan rerata kumulatif dari \", k, \" sampel yang masing-masing berukuran \", n, \".\")\r\n    }\r\n  })\r\n\r\n  ## Tabel distribusi sampel ----\r\n  output$tabel_dist <- DT::renderDataTable({\r\n    # Membuat data sampel\r\n    data_stat_sampel <- stat_sampel()\r\n\r\n    # Menjadikan data sampel lebar\r\n    data_stat_lebar <- data_stat_sampel %>%\r\n      mutate(rerata = round(rerata, 2)) %>%\r\n      pivot_wider(\r\n        names_from = id_sampel,\r\n        values_from = c(nilai, rerata)\r\n      ) %>%\r\n      select(\r\n        order(str_replace(names(.), \"rerata\", \"nilai\")),\r\n        order(names(.))\r\n      ) %>%\r\n      select(-observasi)\r\n\r\n    # Membuat tabel data dengan paket {DT}\r\n    DT::datatable(data_stat_lebar)\r\n  })\r\n}\r\n\r\n\r\n# Aplikasi Shiny\r\nshinyApp(ui, server)\r\n","type":"text"}]
