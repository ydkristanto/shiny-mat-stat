[{"name":"app.R","content":"# Pustaka ----\r\nlibrary(shiny)\r\nlibrary(tidyverse)\r\nlibrary(scales)\r\n\r\n# Antarmuka pengguna ----\r\nui <- fluidPage(\r\n  title = \"Mengapa Distribusi-t?\",\r\n  navbarPage(\"Mengapa Distribusi-t?\",\r\n         ## Tab selang kepercayaan ----\r\n         tabPanel(\"Selang Kepercayaan\",\r\n          sidebarLayout(\r\n            sidebarPanel(\r\n              ### Statistik sampel ----\r\n              wellPanel(\r\n                sliderInput(\"ukuran_sampel\",\r\n                            \"Ukuran sampel:\",\r\n                            min = 5,\r\n                            max = 50,\r\n                            value = 10,\r\n                            step = 1),\r\n                sliderInput(\"banyak_sampel\", \"Banyak sampel:\",\r\n                            min = 20,\r\n                            max = 1000,\r\n                            value = 100,\r\n                            step = 1)\r\n              ),\r\n              ### Konstruksi SK ----\r\n              wellPanel(\r\n                sliderInput(\"tingkat_kepercayaan\",\r\n                            \"Tingkat kepercayaan (%):\",\r\n                            min = 80,\r\n                            max = 99,\r\n                            value = 95,\r\n                            step = 1),\r\n                checkboxGroupInput(\"dist_sampling\",\r\n                                   \"Distribusi sampling*:\",\r\n                                   choices = c(\"Distribusi z\" =\r\n                                                 \"dist_z\",\r\n                                               \"Distribusi t\" =\r\n                                                 \"dist_t\"),\r\n                                   selected = \"dist_z\")\r\n              ),\r\n              ### Parameter populasi ----\r\n              wellPanel(\r\n                sliderInput(\"rerata_pop\", \"Rerata populasi:\",\r\n                            min = 300,\r\n                            max = 700,\r\n                            value = 500),\r\n                sliderInput(\"sigma_pop\",\r\n                            \"Simpangan baku populasi:\",\r\n                            min = 50,\r\n                            max = 150,\r\n                            value = 100)\r\n              ),\r\n              helpText(\"*Model matematis distribusi sampling rerata yang dikonstruksi dengan menggunakan rerata dan simpangan baku sampel.\")\r\n            ),\r\n            ### Panel selang kepercayaan ----\r\n            mainPanel(\r\n              tabsetPanel(\r\n              tabPanel(\"Cakupan Selang Kepercayaan\",\r\n              br(),\r\n              conditionalPanel(\r\n                condition = \"input.dist_sampling.includes('dist_z')\",\r\n                plotOutput(\"plot_sk_z\", height = \"300px\"),\r\n                textOutput(\"teks_sk_z\")\r\n                ),\r\n              br(),\r\n              conditionalPanel(\r\n                condition = \"input.dist_sampling.includes('dist_t')\",\r\n                plotOutput(\"plot_sk_t\", height = \"300px\"),\r\n                textOutput(\"teks_sk_t\")\r\n                )\r\n              ),\r\n              tabPanel(\"Ringkasan\",\r\n                br(),\r\n                plotOutput(\"plot_selisih_sk_zt\",\r\n                             height = \"300px\"),\r\n                textOutput(\"teks_selisih_sk_zt\"),\r\n                br(),\r\n                plotOutput(\"plot_wakil_sampel_sk\", height = \"300px\"),\r\n                textOutput((\"teks_wakil_sampel_sk\")),\r\n                br()\r\n              )\r\n              )\r\n              )\r\n            )\r\n          ),\r\n             ## Tab uji hipotesis ----\r\n             tabPanel(\"Uji Hipotesis\",\r\n                      sidebarLayout(\r\n                        sidebarPanel(\r\n                          wellPanel(\r\n                            sliderInput(\"ukuran_sampel_2\",\r\n                                        \"Ukuran sampel:\",\r\n                                        min = 5,\r\n                                        max = 50,\r\n                                        value = 10,\r\n                                        step = 1),\r\n                            sliderInput(\"banyak_sampel_2\", \"Banyak sampel:\",\r\n                                        min = 20,\r\n                                        max = 1000,\r\n                                        value = 100,\r\n                                        step = 1)\r\n                          ),\r\n                          ### Distribusi sampling ----\r\n                          wellPanel(\r\n                            sliderInput(\"tingkat_sig\",\r\n                                        \"Tingkat signifikansi:\",\r\n                                        min = 0.01,\r\n                                        max = 0.2,\r\n                                        value = 0.05,\r\n                                        step = 0.01),\r\n                            selectInput(\"jenis_uji\",\r\n                                        \"Hipotesis alternatif:\",\r\n                                        choices = c(\"Tidak sama dengan\" = \"dua\",\r\n                                                    \"Kurang dari\" = \"kiri\",\r\n                                                    \"Lebih dari\" = \"kanan\")),\r\n                            checkboxGroupInput(\"dist_sampling_2\",\r\n                                               \"Distribusi sampling*:\",\r\n                                               choices = c(\"Distribusi z\" =\r\n                                                             \"dist_z\",\r\n                                                           \"Distribusi t\" =\r\n                                                             \"dist_t\"),\r\n                                               selected = \"dist_z\")\r\n                          ),\r\n                          ### Parameter populasi ----\r\n                          wellPanel(\r\n                            sliderInput(\"rerata_pop_2\", \"Rerata populasi:\",\r\n                                        min = 300,\r\n                                        max = 700,\r\n                                        value = 500),\r\n                            sliderInput(\"sigma_pop_2\",\r\n                                        \"Simpangan baku populasi:\",\r\n                                        min = 50,\r\n                                        max = 150,\r\n                                        value = 100)\r\n                          ),\r\n                          helpText(\"*Model matematis distribusi sampling rerata yang dikonstruksi dengan menggunakan rerata dan simpangan baku sampel.\")\r\n                        ),\r\n                        ### Panel utama uji hipotesis ----\r\n                        mainPanel(\r\n                          tabsetPanel(\r\n                            tabPanel(\"Statistik Uji\",\r\n                              br(),\r\n                              conditionalPanel(\r\n                                condition = \"input.dist_sampling_2.includes('dist_z')\",\r\n                              plotOutput(\"plot_stat_z\", height = \"300px\"),\r\n                              textOutput(\"teks_stat_z\")\r\n                              ),\r\n                              br(),\r\n                              conditionalPanel(\r\n                                condition = \"input.dist_sampling_2.includes('dist_t')\",\r\n                              plotOutput(\"plot_stat_t\", height = \"300px\"),\r\n                              textOutput(\"teks_stat_t\")\r\n                            )\r\n                            ),\r\n                            tabPanel(\"Ringkasan\",\r\n                               br(),\r\n                               plotOutput(\"plot_selisih_uh_zt\",\r\n                                          height = \"300px\"),\r\n                               textOutput(\"teks_selisih_uh_zt\"),\r\n                               br(),\r\n                               plotOutput(\"plot_wakil_sampel_uh\", height = \"300px\"),\r\n                               textOutput((\"teks_wakil_sampel_uh\")),\r\n                               br()\r\n                            )\r\n                          )\r\n                        )\r\n                      )\r\n               \r\n             ),\r\n             ## Tab informasi ----\r\n             tabPanel(\"Informasi\",\r\n                      sidebarLayout(\r\n                        sidebarPanel(\r\n                          wellPanel(\r\n                            div(h4(\"Deskripsi\",\r\n                                   style = \"font-size: inherit;\r\n                             font-weight: bold\")),\r\n                            div(p(\"Aplikasi Shiny ini bertujuan untuk menunjukkan kekuatan distribusi t sebagai model distribusi sampling rerata ketika ukuran sampelnya kecil.\"))\r\n                          ),\r\n                          wellPanel(\r\n                            div(h4(\"Kode sumber\",\r\n                                   style = \"font-size: inherit;\r\n                             font-weight: bold\")),\r\n                            div(p(\"Kode sumber aplikasi ini tersedia di\", a(\"repositori Github.\", href = \"https://github.com/ydkristanto/apl-dist-t\", target = \"_blank\"), \"Jika Anda ingin melaporkan masalah atau meminta fitur tambahan terhadap aplikasi ini, silakan\", a(\"buat sebuah isu\", href = \"https://github.com/ydkristanto/apl-dist-t/issues\", target = \"_blank\"), \"atau lebih baik lagi\", a(\"minta penarikan\", href = \"https://github.com/ydkristanto/apl-dist-t/pulls\", target = \"_blank\"), \"di repositori tersebut.\"))\r\n                          ),\r\n                          wellPanel(\r\n                            div(h4(\"Lisensi\",\r\n                                   style = \"font-size: inherit;\r\n                             font-weight: bold\")),\r\n                            div(p(\"Lisensi MIT\"),\r\n                                p(\"Copyright (c) 2024 Yosep Dwi Kristanto\"))\r\n                          )\r\n                        ),\r\n                        mainPanel(\r\n                          div(h3(\"Aplikasi Shiny Distribusi t\")),\r\n                          fluidRow(\r\n                          column(9,\r\n                          div(p(\"Aplikasi ini mengajak Anda untuk sejenak mengapresiasi buah pikiran William Sealy Gosset. Ahli Statistika yang akrab dengan nama pena Student atau Mahasiswa ini telah mengkreasi distribusi t untuk menambal kelemahan distribusi normal baku sebagai distribusi sampling rerata sampel-sampel yang relatif kecil.\"), align = \"justify\"),\r\n                          div(p(\"Tujuan aplikasi ini adalah untuk mendemonstrasikan kekuatan distribusi t tersebut. Distribusi ini lebih baik dibandingkan dengan distribusi normal baku untuk memodelkan distribusi sampling rerata sampel-sampel yang kecil, ketika rerata dan simpangan baku populasi diestimasi dengan rerata dan simpangan baku sampel.\"), align = \"justify\"),\r\n                          hr(),\r\n                          div(p(\"Aplikasi interaktif ini dikembangkan dengan menggunakan bahasa pemrogram\", a(\"R\", href = \"https://www.R-project.org/\", target = \"_blank\"), \"dan paket\", a(\"Shiny.\", href = \"https://CRAN.R-project.org/package=shiny\", target = \"_blank\"), \"Paket\", a(\"shinylive\", href = \"https://posit-dev.github.io/r-shinylive/\", target = \"_blank\"), \"digunakan untuk mengekspor aplikasi ini agar dapat dijalankan di peramban web tanpa peladen R yang terpisah.\"), align = \"justify\"),\r\n                          div(p(\"Pengembang dan pemelihara aplikasi ini adalah\", a(\"Yosep Dwi Kristanto,\", href = \"https://people.usd.ac.id/~ydkristanto/\", target = \"_blank\"), \"seorang dosen dan peneliti di program studi\", a(\"Pendidikan Matematika,\", href = \"https://usd.ac.id/s1pmat\", target = \"_blank\"), a(\"Universitas Sanata Dharma,\", href = \"https://www.usd.ac.id/\", target = \"_blank\"), \"Yogyakarta.\"), align = \"justify\"),\r\n                          hr(),\r\n                          div(h4(\"Penafian tentang penggunaan AI:\",\r\n                                 style = \"font-size: inherit; font-weight: bold\")),\r\n                          div(p(\"Perumusan kode-kode di balik aplikasi Shiny ini dibantu oleh kecerdasan buatan (AI) yang akurasinya selalu diawasi secara cermat oleh pengembang. Meskipun demikian, ide konseptual dan mendasar dari aplikasi ini orisinal dan dihasilkan oleh pengembang. Setiap potensi kesalahan atau keterbatasan dalam kode-kode tersebut menjadi tanggung jawab pengembang, dan bantuan AI diakui sebagai alat pendukung dalam proses pengembangan aplikasi ini.\")),\r\n                          br()\r\n                          )\r\n                          # di sini\r\n                          )\r\n                        )\r\n                      )\r\n                      )\r\n             )\r\n)\r\n# Fungsi peladen ----\r\nserver <- function(input, output) {\r\n  ## Menghubungkan nilai pada beberapa input ----\r\n  observeEvent(input$ukuran_sampel, {\r\n    updateSliderInput(inputId = \"ukuran_sampel_2\",\r\n                      value = input$ukuran_sampel)\r\n    })\r\n  observeEvent(input$ukuran_sampel_2,  {\r\n    updateSliderInput(inputId = \"ukuran_sampel\",\r\n                      value = input$ukuran_sampel_2)\r\n  })\r\n  \r\n  observeEvent(input$banyak_sampel, {\r\n    updateSliderInput(inputId = \"banyak_sampel_2\",\r\n                      value = input$banyak_sampel)\r\n  })\r\n  observeEvent(input$banyak_sampel_2,  {\r\n    updateSliderInput(inputId = \"banyak_sampel\",\r\n                      value = input$banyak_sampel_2)\r\n  })\r\n  \r\n  observeEvent(input$tingkat_sig, {\r\n    updateSliderInput(inputId = \"tingkat_kepercayaan\",\r\n                      value = (1 - input$tingkat_sig) * 100)\r\n  })\r\n  observeEvent(input$tingkat_kepercayaan,  {\r\n    updateSliderInput(inputId = \"tingkat_sig\",\r\n                      value = 1 - input$tingkat_kepercayaan / 100)\r\n  })\r\n  \r\n  observeEvent(input$rerata_pop, {\r\n    updateSliderInput(inputId = \"rerata_pop_2\",\r\n                      value = input$rerata_pop)\r\n  })\r\n  observeEvent(input$rerata_pop_2,  {\r\n    updateSliderInput(inputId = \"rerata_pop\",\r\n                      value = input$rerata_pop_2)\r\n  })\r\n  \r\n  observeEvent(input$sigma_pop, {\r\n    updateSliderInput(inputId = \"sigma_pop_2\",\r\n                      value = input$sigma_pop)\r\n  })\r\n  observeEvent(input$sigma_pop_2,  {\r\n    updateSliderInput(inputId = \"sigma_pop\",\r\n                      value = input$sigma_pop_2)\r\n  })\r\n  \r\n  ## Membuat sampel-sampel acak ----\r\n  membuat_set_sampel <- function(k, n, mu, sigma) {\r\n    seed <- as.numeric(Sys.Date())\r\n    set.seed(seed)\r\n    set_sampel <- matrix(round(rnorm(k * n, mean = mu, sd = sigma)),\r\n                         nrow = n)\r\n    tibble(\r\n      id_sampel = rep(1:k, each = n),\r\n      nilai = as.vector(set_sampel)\r\n    )\r\n  }\r\n  \r\n  rep_membuat_set_sampel <- repeatable(membuat_set_sampel)\r\n  \r\n  menghitung_statistik <- function(data, mu, alternatif = \"dua\",\r\n                                   sig = .05) {\r\n    seed = as.numeric(Sys.Date())\r\n    tingkat_kepercayaan <- 1 - sig\r\n    statistik <- data %>%\r\n      group_by(id_sampel) %>%\r\n      summarize(\r\n        ukuran = n(),\r\n        rerata = mean(nilai),\r\n        sd = sd(nilai),\r\n        se = sd(nilai) / sqrt(n()),\r\n        t_bawah = mean(nilai) - qt(1 - sig / 2,\r\n                                   n() - 1) * (sd(nilai) / sqrt(n())),\r\n        t_atas = mean(nilai) + qt(1 - sig / 2,\r\n                                  n() - 1) * (sd(nilai) / sqrt(n())),\r\n        z_bawah = mean(nilai) - qnorm(1 - sig / 2,\r\n                                      mean = 0,\r\n                                      sd = 1) * (sd(nilai) / sqrt(n())),\r\n        z_atas = mean(nilai) + qnorm(1 - sig / 2,\r\n                                     mean = 0,\r\n                                     sd = 1) * (sd(nilai) / sqrt(n())),\r\n        stat_uji = (mean(nilai) - mu) / (sd(nilai) / sqrt(n()))\r\n      )\r\n    # Menambahkan variabel apakah selang kepercayaan mencakup mu\r\n    statistik <- mutate(statistik,\r\n                        t_mencakup = t_bawah <= mu & t_atas >= mu,\r\n                        z_mencakup = z_bawah <= mu & z_atas >= mu\r\n    )\r\n    \r\n    # Melakukan uji hipotesis untuk menentukan nilai p\r\n    if (alternatif == \"dua\") {\r\n      statistik <- mutate(statistik,\r\n                          t_p = 2 * pt(-abs(stat_uji),\r\n                                       df = ukuran - 1),\r\n                          z_p = 2 * pnorm(-abs(stat_uji),\r\n                                          mean = 0, sd = 1)\r\n                          )\r\n    } else if (alternatif == \"kiri\") {\r\n      statistik <- mutate(statistik,\r\n                          t_p = pt(stat_uji, df = ukuran - 1),\r\n                          z_p = pnorm(stat_uji,\r\n                                      mean = 0, sd = 1)\r\n                          )\r\n    } else if (alternatif == \"kanan\") {\r\n      statistik <- mutate(statistik,\r\n                          t_p = 1 - pt(stat_uji, df = ukuran - 1),\r\n                          z_p = 1 - pnorm(stat_uji, mean = 0, sd = 1)\r\n                          )\r\n    }\r\n    \r\n    # Menentukan apakah uji hipotesisnya signifikan\r\n    statistik <- mutate(statistik,\r\n                        t_sig = t_p <= sig,\r\n                        z_sig = z_p <= sig\r\n                        )\r\n    return(statistik)\r\n  }\r\n  \r\n  komposisi_sampel_stat <- function(k, n, mu, sigma,\r\n                                    alternatif = \"dua\", sig = .05) {\r\n    set_sampel <- rep_membuat_set_sampel(k, n, mu, sigma)\r\n    data_stat <- menghitung_statistik(set_sampel, mu, alternatif, sig)\r\n    return(data_stat)\r\n  }\r\n  \r\n  stat_set_sampel <- reactive({\r\n    komposisi_sampel_stat(\r\n      input$banyak_sampel, input$ukuran_sampel, input$rerata_pop,\r\n      input$sigma_pop, alternatif = input$jenis_uji, sig = input$tingkat_sig\r\n    )\r\n  })\r\n  \r\n  ## Plot SK distribusi z ----\r\n    output$plot_sk_z <- renderPlot({\r\n      data_stat <- stat_set_sampel()\r\n      k <- input$banyak_sampel\r\n      alpha_sk <- function(x) {\r\n        1 / 1372000 * (x - 1000)^2 + 3 / 10\r\n      }\r\n    ggplot() +\r\n      geom_segment(data = data_stat,\r\n                   aes(x = id_sampel, xend = id_sampel,\r\n                       y = z_bawah, yend = z_atas,\r\n                       color = factor(z_mencakup)),\r\n                   linewidth = 1,\r\n                   alpha = alpha_sk(k)) +\r\n      geom_point(data = data_stat,\r\n                 aes(x = id_sampel, y = rerata,\r\n                     color = factor(z_mencakup))) +\r\n      geom_hline(yintercept = input$rerata_pop, linetype = \"dashed\",\r\n                 linewidth = 1, color = \"black\") +\r\n      theme_bw(base_size = 14) +\r\n      scale_color_manual(name = \"Mencakup mu?\",\r\n                         values = c(\"FALSE\" = \"#d95f02\",\r\n                                    \"TRUE\" = \"#1b9e77\"),\r\n                         labels = c(\"FALSE\" = \"Tidak\",\r\n                                    \"TRUE\" = \"Ya\")) +\r\n      theme(legend.position = \"bottom\",\r\n            plot.title = element_text(face = \"bold\"),\r\n            axis.title.x = element_blank(),\r\n            axis.text.x = element_blank(),\r\n            axis.ticks.x = element_blank()) +\r\n      labs(title = \"Penggunaan Distribusi-z\",\r\n           y = \"Nilai\")\r\n  })\r\n  ## Teks distribusi z ----\r\n  output$teks_sk_z <- renderText({\r\n    data_stat <- stat_set_sampel()\r\n    if (\"dist_t\" %in% input$dist_sampling) {\r\n      fig_num <- \"1.a\"\r\n    } else {\r\n      fig_num <- \"1\"\r\n    }\r\n    tingkat_keper <- input$tingkat_kepercayaan\r\n    k <- input$banyak_sampel\r\n    persen_mencakup <- round(mean(data_stat$z_mencakup) * 100, 2)\r\n    \r\n    teks <- paste(\"Gambar \", fig_num, \": Selang-selang kepercayaan dari \", k, \" sampel yang dikonstruksi dengan tingkat kepercayaan \",tingkat_keper, \"% dan menggunakan distribusi sampling statistik z. Terdapat \", persen_mencakup, \"% selang kepercayaan yang memuat rerata populasinya.\", sep = \"\")\r\n  })\r\n  ## Plot SK distribusi t ----\r\n  output$plot_sk_t <- renderPlot({\r\n    data_stat <- stat_set_sampel()\r\n    k <- input$banyak_sampel\r\n    alpha_sk <- function(x) {\r\n      1 / 1372000 * (x - 1000)^2 + 3 / 10\r\n    }\r\n    ggplot() +\r\n      geom_segment(data = data_stat,\r\n                   aes(x = id_sampel, xend = id_sampel,\r\n                       y = t_bawah, yend = t_atas,\r\n                       color = factor(t_mencakup)),\r\n                   linewidth = 1,\r\n                   alpha = alpha_sk(k)) +\r\n      geom_point(data = data_stat,\r\n                 aes(x = id_sampel, y = rerata,\r\n                     color = factor(t_mencakup))) +\r\n      geom_hline(yintercept = input$rerata_pop, linetype = \"dashed\",\r\n                 linewidth = 1, color = \"black\") +\r\n      theme_bw(base_size = 14) +\r\n      scale_color_manual(name = \"Mencakup mu?\",\r\n                         values = c(\"FALSE\" = \"#d95f02\",\r\n                                    \"TRUE\" = \"#1b9e77\"),\r\n                         labels = c(\"FALSE\" = \"Tidak\",\r\n                                    \"TRUE\" = \"Ya\")) +\r\n      theme(legend.position = \"bottom\",\r\n            plot.title = element_text(face = \"bold\"),\r\n            axis.title.x = element_blank(),\r\n            axis.text.x = element_blank(),\r\n            axis.ticks.x = element_blank()) +\r\n      labs(title = \"Penggunaan Distribusi-t\",\r\n           y = \"Nilai\")\r\n  })\r\n  ## Teks distribusi t ----\r\n  output$teks_sk_t <- renderText({\r\n    data_stat <- stat_set_sampel()\r\n    if (\"dist_z\" %in% input$dist_sampling) {\r\n      fig_num <- \"1.b\"\r\n    } else {\r\n      fig_num <- \"1\"\r\n    }\r\n    tingkat_keper <- input$tingkat_kepercayaan\r\n    k <- input$banyak_sampel\r\n    persen_mencakup <- round(mean(data_stat$t_mencakup) * 100, 2)\r\n    \r\n    paste(\"Gambar \", fig_num, \": Selang-selang kepercayaan dari \", k, \" sampel yang dikonstruksi dengan tingkat kepercayaan \",tingkat_keper, \"% dan menggunakan distribusi-t. Terdapat \", persen_mencakup, \"% selang kepercayaan yang memuat rerata populasinya.\", sep = \"\")\r\n  })\r\n  \r\n  ## Plot statistik uji z ----\r\n  output$plot_stat_z <- renderPlot({\r\n    data_stat <- stat_set_sampel()\r\n    k <- input$banyak_sampel\r\n    alpha_stat_uji <- function(x) {\r\n      1 / 1372000 * (x - 1000)^2 + 3 / 10\r\n    }\r\n    sig <- input$tingkat_sig\r\n    fnorm <- function(x) {\r\n      dnorm(x, mean = 0, sd = 1)\r\n    }\r\n    if (input$jenis_uji == \"dua\") {\r\n      z_kritis <- qnorm(sig / 2, mean = 0, sd = 1,\r\n                        lower.tail = FALSE)\r\n      ggplot() +\r\n        stat_function(fun = dnorm, args = list(mean = 0, sd = 1),\r\n                      geom = \"area\", xlim = c(-4, -z_kritis),\r\n                      fill = \"red\", alpha = .3) +\r\n        stat_function(fun = dnorm, args = list(mean = 0, sd = 1),\r\n                      geom = \"area\", xlim = c(z_kritis, 4),\r\n                      fill = \"red\", alpha = .3) +\r\n        stat_function(fun = dnorm, args = list(mean = 0, sd = 1),\r\n                      geom = \"area\", xlim = c(-z_kritis, z_kritis),\r\n                      fill = \"grey\", alpha = .3) +\r\n        geom_segment(aes(x = -z_kritis, xend = -z_kritis,\r\n                         y = 0, yend = fnorm(-z_kritis)),\r\n                     col = \"red\", linewidth = 1) +\r\n        geom_segment(aes(x = z_kritis, xend = z_kritis,\r\n                         y = 0, yend = fnorm(z_kritis)),\r\n                     col = \"red\", linewidth = 1) +\r\n        geom_segment(data = data_stat,\r\n                     aes(x = stat_uji, xend = stat_uji,\r\n                         y = 0, yend = Inf, col = z_sig),\r\n                     alpha = alpha_stat_uji(k),\r\n                     linewidth = 1) +\r\n        stat_function(fun = dnorm, args = list(mean = 0, sd = 1),\r\n                      geom = \"line\", linewidth = 1.5) +\r\n        xlim(-4, 4) +\r\n        ylim(0, .5) +\r\n        scale_color_manual(values = c(\"FALSE\" = \"#1b9e77\",\r\n                                      \"TRUE\" = \"#d95f02\"),\r\n                           name = \"Menolak H_0\",\r\n                           labels = c(\"FALSE\" = \"Tidak\",\r\n                                      \"TRUE\" = \"Ya\")) +\r\n        theme_bw(base_size = 14) +\r\n        theme(legend.position = \"bottom\",\r\n              axis.title.y = element_blank(),\r\n              axis.text.y = element_blank(),\r\n              axis.ticks.y = element_blank(),\r\n              plot.title = element_text(face = \"bold\")) +\r\n        labs(title = \"Uji Hipotesis dengan Distribusi-z\",\r\n             x = \"z\")\r\n    } else if (input$jenis_uji == \"kiri\") {\r\n      z_kritis <- qnorm(sig, mean = 0, sd = 1,\r\n                        lower.tail = TRUE)\r\n      ggplot() +\r\n        stat_function(fun = dnorm, args = list(mean = 0, sd = 1),\r\n                      geom = \"area\", xlim = c(-4, z_kritis),\r\n                      fill = \"red\", alpha = .3) +\r\n        stat_function(fun = dnorm, args = list(mean = 0, sd = 1),\r\n                      geom = \"area\", xlim = c(z_kritis, -z_kritis),\r\n                      fill = \"grey\", alpha = .3) +\r\n        geom_segment(aes(x = z_kritis, xend = z_kritis,\r\n                         y = 0, yend = fnorm(z_kritis)),\r\n                     col = \"red\", linewidth = 1) +\r\n        geom_segment(data = data_stat,\r\n                     aes(x = stat_uji, xend = stat_uji,\r\n                         y = 0, yend = Inf, col = z_sig),\r\n                     alpha = alpha_stat_uji(k),\r\n                     linewidth = 1) +\r\n        stat_function(fun = dnorm, args = list(mean = 0, sd = 1),\r\n                      geom = \"line\", linewidth = 1.5) +\r\n        xlim(-4, 4) +\r\n        ylim(0, .5) +\r\n        scale_color_manual(values = c(\"FALSE\" = \"#1b9e77\",\r\n                                      \"TRUE\" = \"#d95f02\"),\r\n                           name = \"Menolak H_0\",\r\n                           labels = c(\"FALSE\" = \"Tidak\",\r\n                                      \"TRUE\" = \"Ya\")) +\r\n        theme_bw(base_size = 14) +\r\n        theme(legend.position = \"bottom\",\r\n              axis.title.y = element_blank(),\r\n              axis.text.y = element_blank(),\r\n              axis.ticks.y = element_blank(),\r\n              plot.title = element_text(face = \"bold\")) +\r\n        labs(title = \"Uji Hipotesis dengan Distribusi-z\",\r\n             x = \"z\")\r\n    } else if (input$jenis_uji == \"kanan\") {\r\n      z_kritis <- qnorm(sig, mean = 0, sd = 1,\r\n                        lower.tail = FALSE)\r\n      ggplot() +\r\n        stat_function(fun = dnorm, args = list(mean = 0, sd = 1),\r\n                      geom = \"area\", xlim = c(z_kritis, 4),\r\n                      fill = \"red\", alpha = .3) +\r\n        stat_function(fun = dnorm, args = list(mean = 0, sd = 1),\r\n                      geom = \"area\", xlim = c(-z_kritis, z_kritis),\r\n                      fill = \"grey\", alpha = .3) +\r\n        geom_segment(aes(x = z_kritis, xend = z_kritis,\r\n                         y = 0, yend = fnorm(z_kritis)),\r\n                     col = \"red\", linewidth = 1) +\r\n        geom_segment(data = data_stat,\r\n                     aes(x = stat_uji, xend = stat_uji,\r\n                         y = 0, yend = Inf, col = z_sig),\r\n                     alpha = alpha_stat_uji(k),\r\n                     linewidth = 1) +\r\n        stat_function(fun = dnorm, args = list(mean = 0, sd = 1),\r\n                      geom = \"line\", linewidth = 1.5) +\r\n        xlim(-4, 4) +\r\n        ylim(0, .5) +\r\n        scale_color_manual(values = c(\"FALSE\" = \"#1b9e77\",\r\n                                      \"TRUE\" = \"#d95f02\"),\r\n                           name = \"Menolak H_0\",\r\n                           labels = c(\"FALSE\" = \"Tidak\",\r\n                                      \"TRUE\" = \"Ya\")) +\r\n        theme_bw(base_size = 14) +\r\n        theme(legend.position = \"bottom\",\r\n              axis.title.y = element_blank(),\r\n              axis.text.y = element_blank(),\r\n              axis.ticks.y = element_blank(),\r\n              plot.title = element_text(face = \"bold\")) +\r\n        labs(title = \"Uji Hipotesis dengan Distribusi-z\",\r\n             x = \"z\")\r\n    }\r\n  })\r\n  \r\n  ## Teks statistik uji z ----\r\n  output$teks_stat_z <- renderText({\r\n    data_stat <- stat_set_sampel()\r\n    if (\"dist_t\" %in% input$dist_sampling_2) {\r\n      fig_num <- \"3.a\"\r\n    } else {\r\n      fig_num <- \"3\"\r\n    }\r\n    sig <- input$tingkat_sig\r\n    k <- input$banyak_sampel\r\n    persen_menolak <- round(mean(data_stat$z_sig) * 100, 2)\r\n    \r\n    teks <- paste(\"Gambar \", fig_num, \": Statistik-statistik uji dari \", k, \" sampel yang dibandingkan dengan model matematis kurva-z. Terdapat \", persen_menolak, \"% sampel yang menolak hipotesis nol meskipun hipotesis nol tersebut benar.\", sep = \"\")\r\n  })\r\n  \r\n  ## Plot statistik uji t ----\r\n  output$plot_stat_t <- renderPlot({\r\n    data_stat <- stat_set_sampel()\r\n    k <- input$banyak_sampel\r\n    alpha_stat_uji <- function(x) {\r\n      1 / 1372000 * (x - 1000)^2 + 3 / 10\r\n    }\r\n    sig <- input$tingkat_sig\r\n    n <- input$ukuran_sampel\r\n    ft <- function(x) {\r\n      dt(x, df = n - 1)\r\n    }\r\n    if (input$jenis_uji == \"dua\") {\r\n      t_kritis <- qt(sig / 2, df = n - 1,\r\n                        lower.tail = FALSE)\r\n      ggplot() +\r\n        stat_function(fun = dt, args = list(df = n - 1),\r\n                      geom = \"area\", xlim = c(-4, -t_kritis),\r\n                      fill = \"red\", alpha = .3) +\r\n        stat_function(fun = dt, args = list(df = n - 1),\r\n                      geom = \"area\", xlim = c(t_kritis, 4),\r\n                      fill = \"red\", alpha = .3) +\r\n        stat_function(fun = dt, args = list(df = n - 1),\r\n                      geom = \"area\", xlim = c(-t_kritis, t_kritis),\r\n                      fill = \"grey\", alpha = .3) +\r\n        geom_segment(aes(x = -t_kritis, xend = -t_kritis,\r\n                         y = 0, yend = ft(-t_kritis)),\r\n                     col = \"red\", linewidth = 1) +\r\n        geom_segment(aes(x = t_kritis, xend = t_kritis,\r\n                         y = 0, yend = ft(t_kritis)),\r\n                     col = \"red\", linewidth = 1) +\r\n        geom_segment(data = data_stat,\r\n                     aes(x = stat_uji, xend = stat_uji,\r\n                         y = 0, yend = Inf, col = t_sig),\r\n                     alpha = alpha_stat_uji(k),\r\n                     linewidth = 1) +\r\n        stat_function(fun = dt, args = list(df = n - 1),\r\n                      geom = \"line\", linewidth = 1.5) +\r\n        xlim(-4, 4) +\r\n        ylim(0, .5) +\r\n        scale_color_manual(values = c(\"FALSE\" = \"#1b9e77\",\r\n                                      \"TRUE\" = \"#d95f02\"),\r\n                           name = \"Menolak H_0\",\r\n                           labels = c(\"FALSE\" = \"Tidak\",\r\n                                      \"TRUE\" = \"Ya\")) +\r\n        theme_bw(base_size = 14) +\r\n        theme(legend.position = \"bottom\",\r\n              axis.title.y = element_blank(),\r\n              axis.text.y = element_blank(),\r\n              axis.ticks.y = element_blank(),\r\n              plot.title = element_text(face = \"bold\")) +\r\n        labs(title = \"Uji Hipotesis dengan Distribusi-t\",\r\n             x = \"t\")\r\n    } else if (input$jenis_uji == \"kiri\") {\r\n      t_kritis <- qt(sig, df = n - 1,\r\n                        lower.tail = TRUE)\r\n      ggplot() +\r\n        stat_function(fun = dt, args = list(df = n - 1),\r\n                      geom = \"area\", xlim = c(-4, t_kritis),\r\n                      fill = \"red\", alpha = .3) +\r\n        stat_function(fun = dt, args = list(df = n - 1),\r\n                      geom = \"area\", xlim = c(t_kritis, -t_kritis),\r\n                      fill = \"grey\", alpha = .3) +\r\n        geom_segment(aes(x = t_kritis, xend = t_kritis,\r\n                         y = 0, yend = ft(t_kritis)),\r\n                     col = \"red\", linewidth = 1) +\r\n        geom_segment(data = data_stat,\r\n                     aes(x = stat_uji, xend = stat_uji,\r\n                         y = 0, yend = Inf, col = t_sig),\r\n                     alpha = alpha_stat_uji(k),\r\n                     linewidth = 1) +\r\n        stat_function(fun = dt, args = list(df = n - 1),\r\n                      geom = \"line\", linewidth = 1.5) +\r\n        xlim(-4, 4) +\r\n        ylim(0, .5) +\r\n        scale_color_manual(values = c(\"FALSE\" = \"#1b9e77\",\r\n                                      \"TRUE\" = \"#d95f02\"),\r\n                           name = \"Menolak H_0\",\r\n                           labels = c(\"FALSE\" = \"Tidak\",\r\n                                      \"TRUE\" = \"Ya\")) +\r\n        theme_bw(base_size = 14) +\r\n        theme(legend.position = \"bottom\",\r\n              axis.title.y = element_blank(),\r\n              axis.text.y = element_blank(),\r\n              axis.ticks.y = element_blank(),\r\n              plot.title = element_text(face = \"bold\")) +\r\n        labs(title = \"Uji Hipotesis dengan Distribusi-t\",\r\n             x = \"t\")\r\n    } else if (input$jenis_uji == \"kanan\") {\r\n      t_kritis <- qt(sig, df = n - 1,\r\n                        lower.tail = FALSE)\r\n      ggplot() +\r\n        stat_function(fun = dt, args = list(df = n - 1),\r\n                      geom = \"area\", xlim = c(t_kritis, 4),\r\n                      fill = \"red\", alpha = .3) +\r\n        stat_function(fun = dt, args = list(df = n - 1),\r\n                      geom = \"area\", xlim = c(-t_kritis, t_kritis),\r\n                      fill = \"grey\", alpha = .3) +\r\n        geom_segment(aes(x = t_kritis, xend = t_kritis,\r\n                         y = 0, yend = ft(t_kritis)),\r\n                     col = \"red\", linewidth = 1) +\r\n        geom_segment(data = data_stat,\r\n                     aes(x = stat_uji, xend = stat_uji,\r\n                         y = 0, yend = Inf, col = t_sig),\r\n                     alpha = alpha_stat_uji(k),\r\n                     linewidth = 1) +\r\n        stat_function(fun = dt, args = list(df = n - 1),\r\n                      geom = \"line\", linewidth = 1.5) +\r\n        xlim(-4, 4) +\r\n        ylim(0, .5) +\r\n      scale_color_manual(values = c(\"FALSE\" = \"#1b9e77\",\r\n                                    \"TRUE\" = \"#d95f02\"),\r\n                         name = \"Menolak H_0\",\r\n                         labels = c(\"FALSE\" = \"Tidak\",\r\n                                    \"TRUE\" = \"Ya\")) +\r\n        theme_bw(base_size = 14) +\r\n        theme(legend.position = \"bottom\",\r\n              axis.title.y = element_blank(),\r\n              axis.text.y = element_blank(),\r\n              axis.ticks.y = element_blank(),\r\n              plot.title = element_text(face = \"bold\")) +\r\n        labs(title = \"Uji Hipotesis dengan Distribusi-t\",\r\n             x = \"t\")\r\n    }\r\n  })\r\n  \r\n  ## Teks statistik uji t ----\r\n  output$teks_stat_t <- renderText({\r\n    data_stat <- stat_set_sampel()\r\n    if (\"dist_z\" %in% input$dist_sampling_2) {\r\n      fig_num <- \"3.b\"\r\n    } else {\r\n      fig_num <- \"3\"\r\n    }\r\n    sig <- input$tingkat_sig\r\n    k <- input$banyak_sampel\r\n    persen_menolak <- round(mean(data_stat$t_sig) * 100, 2)\r\n    \r\n    teks <- paste(\"Gambar \", fig_num, \": Statistik-statistik uji dari \", k, \" sampel yang dibandingkan dengan model matematis distribusi-t. Terdapat \", persen_menolak, \"% sampel yang menolak hipotesis nol meskipun hipotesis nol tersebut benar.\", sep = \"\")\r\n  })\r\n  \r\n  ## Plot selisih SK ----\r\n  output$plot_selisih_sk_zt <- renderPlot({\r\n    data_stat <- stat_set_sampel()\r\n    data_stat <- data_stat %>% \r\n      select(id_sampel, z_mencakup, t_mencakup) %>% \r\n      summarise(z = mean(z_mencakup), t = mean(t_mencakup)) %>% \r\n      pivot_longer(cols = c(z, t), names_to = \"dist_sampling\", \r\n                   values_to = \"prop_mencakup\") %>% \r\n      mutate(persen_mencakup = paste0(round(prop_mencakup * 100, 2),\r\n                                     \"%\"))\r\n    \r\n    tingkat_keper <- 1 - input$tingkat_sig\r\n    x_maks <- max(data_stat$prop_mencakup, tingkat_keper)\r\n    x_min <- min(data_stat$prop_mencakup, tingkat_keper)\r\n    x_range <- x_maks - x_min\r\n    plot_range <- c(x_min - x_range / 4,\r\n                    x_maks + x_range / 4)\r\n    \r\n    slsh_persen <- round(abs(data_stat$prop_mencakup[1] - data_stat$prop_mencakup[2]) * 100, 2)\r\n    pos_x <- data_stat$prop_mencakup[1] + slsh_persen / 200\r\n    ggplot(data_stat) +\r\n      geom_segment(aes(x = prop_mencakup, xend = tingkat_keper,\r\n                       y = dist_sampling, yend = dist_sampling,\r\n                       col = dist_sampling),\r\n                   show.legend = FALSE, linewidth = 5,\r\n                   alpha = .6) +\r\n      geom_segment(aes(x = tingkat_keper, xend = tingkat_keper,\r\n                       y = 0, yend = Inf),\r\n                   linewidth = 3, alpha = .6) +\r\n      geom_segment(aes(x = prop_mencakup[1], xend = prop_mencakup[2],\r\n                       y = factor(1), yend = factor(1)),\r\n                   show.legend = FALSE, linewidth = 5, color = \"#7570b3\",\r\n                   alpha = .2) +\r\n      geom_point(aes(x = prop_mencakup, y = factor(1)),\r\n                 size = 8, color = \"#7570b3\") +\r\n      geom_point(aes(x = prop_mencakup,\r\n                     y = dist_sampling,\r\n                     col = dist_sampling),\r\n                 size = 8) +\r\n      geom_label(aes(x = prop_mencakup, y = dist_sampling,\r\n                    label = persen_mencakup, col = dist_sampling),\r\n                fill = \"white\", fontface = \"bold\", size = 5,\r\n                nudge_y = .25, label.r = unit(0.1, \"lines\"),\r\n                show.legend = FALSE) +\r\n      geom_label(aes(x = pos_x, y = factor(1),\r\n                     label = paste0(slsh_persen, \"%\")),\r\n                 color = \"#7570b3\", fill = \"white\", fontface = \"bold\",\r\n                 size = 5, label.r = unit(0.1, \"lines\"),\r\n                 show.legend = FALSE) +\r\n      scale_x_continuous(labels = label_percent(scale = 100),\r\n                         limits = plot_range) +\r\n      scale_color_brewer(palette = \"Dark2\", name = \"Distribusi sampling\") +\r\n      theme_bw(base_size = 14) +\r\n      theme(legend.position = \"bottom\",\r\n            axis.title.y = element_blank(),\r\n            axis.text.y = element_blank(),\r\n            axis.ticks.y = element_blank()) +\r\n      labs(x = \"Persentase\")\r\n  })\r\n  \r\n  ## Teks selisih SK ----\r\n  output$teks_selisih_sk_zt <- renderText({\r\n    data_stat <- stat_set_sampel()\r\n    data_stat <- data_stat %>% \r\n      select(id_sampel, z_mencakup, t_mencakup) %>% \r\n      summarise(z = mean(z_mencakup), t = mean(t_mencakup)) %>% \r\n      pivot_longer(cols = c(z, t), names_to = \"dist_sampling\", \r\n                   values_to = \"prop_mencakup\") %>% \r\n      mutate(persen_mencakup = paste0(round(prop_mencakup * 100, 2),\r\n                                      \"%\"))\r\n    \r\n    tingkat_keper <- 1 - input$tingkat_sig\r\n    k <- input$banyak_sampel\r\n    slsh_persen <- round(abs(data_stat$prop_mencakup[1] - data_stat$prop_mencakup[2]) * 100, 2)\r\n    \r\n    paste0(\"Gambar 2.a: Perbedaan persentase selang kepercayaan yang memuat rerata populasi antara selang yang menggunakan distribusi z dan t. Perbedaan tersebut kurang lebih sebesar \", slsh_persen, \"%.\")\r\n  })\r\n  \r\n  \r\n  ## Plot perwakilan sampel ----\r\n  output$plot_wakil_sampel_sk <- renderPlot({\r\n    rerata_pop <- input$rerata_pop\r\n    data_sampel <- rep_membuat_set_sampel(input$banyak_sampel,\r\n                                      input$ukuran_sampel,\r\n                                      input$rerata_pop,\r\n                                      input$sigma_pop)\r\n    data_stat <- stat_set_sampel()\r\n    data_stat <- data_stat %>% \r\n      mutate(mencakup = ifelse(z_mencakup == FALSE & t_mencakup == FALSE,\r\n                               0, ifelse(z_mencakup == FALSE & t_mencakup == TRUE, \r\n                                         1, 2))) %>% \r\n      group_by(mencakup) %>% \r\n      slice_sample(n = 5, replace = FALSE)\r\n    data_stat_simpel <- data_stat %>% \r\n      select(id_sampel, rerata, se, mencakup)\r\n    \r\n    no_sampel <- data_stat$id_sampel\r\n    \r\n    data_sampel_wakil <- data_sampel %>% \r\n      filter(id_sampel %in% no_sampel)\r\n    data_sampel_wakil <- left_join(data_sampel_wakil, data_stat_simpel,\r\n                                   by = \"id_sampel\")\r\n    data_sampel_wakil %>% \r\n      ggplot(aes(x = fct_reorder(factor(id_sampel), mencakup),\r\n                 y = nilai, color = factor(mencakup))) +\r\n      geom_violin(fill = \"whitesmoke\", linewidth = .75) +\r\n      geom_point(size = 3, alpha = .6) +\r\n      geom_crossbar(stat = \"summary\", color = \"black\",\r\n                    width = .5, fatten = 3) +\r\n      stat_summary(fun = \"mean\", geom = \"point\", color = \"darkred\",\r\n                   size = 5) +\r\n      geom_hline(yintercept = rerata_pop,\r\n                 linewidth = 1, linetype = \"dashed\") +\r\n      theme_bw(base_size = 14) +\r\n      scale_color_manual(values = c(\"0\" = \"#d95f02\",\r\n                                    \"1\" = \"#7570b3\",\r\n                                    \"2\" = \"#1b9e77\")) +\r\n      theme(legend.position = \"none\") +\r\n      labs(x = \"ID Sampel\", y = \"Nilai\")\r\n  })\r\n  \r\n  ## Teks perwakilan sampel ----\r\n  output$teks_wakil_sampel_sk <- renderText({\r\n    rerata_pop <- input$rerata_pop\r\n    data_sampel <- rep_membuat_set_sampel(input$banyak_sampel,\r\n                                          input$ukuran_sampel,\r\n                                          input$rerata_pop,\r\n                                          input$sigma_pop)\r\n    data_stat <- stat_set_sampel()\r\n    data_stat <- data_stat %>% \r\n      mutate(mencakup = ifelse(z_mencakup == FALSE & t_mencakup == FALSE,\r\n                               0, ifelse(z_mencakup == FALSE & t_mencakup == TRUE, \r\n                                         1, 2))) %>% \r\n      group_by(mencakup) %>% \r\n      slice_sample(n = 5, replace = FALSE)\r\n    data_stat_simpel <- data_stat %>% \r\n      select(id_sampel, rerata, se, mencakup)\r\n    \r\n    no_sampel <- data_stat$id_sampel\r\n    \r\n    data_sampel_wakil <- data_sampel %>% \r\n      filter(id_sampel %in% no_sampel)\r\n    data_sampel_wakil <- left_join(data_sampel_wakil, data_stat_simpel,\r\n                                   by = \"id_sampel\")\r\n    n <- input$ukuran_sampel\r\n    n_0 <- sum(data_sampel_wakil$mencakup == 0) / n\r\n    n_1 <- sum(data_sampel_wakil$mencakup == 1) / n\r\n    n_2 <- sum(data_sampel_wakil$mencakup == 2) / n\r\n    n_total <- n_0 + n_1 + n_2\r\n    \r\n    if (n_1 > 0 & n_0 > 0) {\r\n      paste(\"Gambar 2.b: Distribusi \", n_total, \" perwakilan sampel. Diagram violin berwarna oranye menunjukkan distribusi sampel-sampel yang selang kepercayaannya tidak memuat rerata populasi, baik menggunakan distribusi z maupun t sebagai distribusi samplingnya. Diagram ungu menunjukkan sampel-sampel yang selang kepercayannya tidak memuat rerata populasi ketika menggunakan distribusi z sebagai distribusi samplingnya, tetapi memuat rerata populasi ketika distribusi samplingnya adalah distribusi t. Terakhir, diagram hijau merepresentasikan sampel-sampel yang selang kepercayaannya memuat rerata populasi.\")\r\n    } else if (n_1 == 0 & n_0 > 0) {\r\n      paste0(\"Gambar 2.b: Distribusi \", n_total, \" perwakilan sampel. Diagram violin berwarna oranye menunjukkan distribusi sampel-sampel yang selang kepercayaannya tidak memuat rerata populasi, baik menggunakan distribusi z maupun t sebagai distribusi samplingnya. Diagram hijau merepresentasikan sampel-sampel yang selang kepercayaannya memuat rerata populasi.\")\r\n    } else if (n_1 == 0 & n_0 == 0) {\r\n      paste0(\"Gambar 2.b: Distribusi \", n_total, \" perwakilan sampel. Diagram violin tersebut menunjukkan distribusi beberapa perwakilan sampel yang selang kepercayaannya memuat rerata populasi.\")\r\n    } else if (n_1 > 0 & n_0 == 0) {\r\n      paste0(\"Gambar 2.b: Distribusi \", n_total, \" perwakilan sampel. Diagram violin berwarna oranye menunjukkan distribusi sampel-sampel yang selang kepercayaannya tidak memuat rerata populasi, baik menggunakan distribusi z maupun t sebagai distribusi samplingnya. Diagram ungu menunjukkan sampel-sampel yang selang kepercayannya tidak memuat rerata populasi ketika menggunakan distribusi z sebagai distribusi samplingnya, tetapi memuat rerata populasi ketika distribusi samplingnya adalah distribusi t.\")\r\n    }\r\n    \r\n  })\r\n  \r\n  ## Plot selisih UH ----\r\n  output$plot_selisih_uh_zt <- renderPlot({\r\n    data_stat <- stat_set_sampel()\r\n    data_stat <- data_stat %>% \r\n      select(id_sampel, z_sig, t_sig) %>% \r\n      summarise(z = mean(z_sig), t = mean(t_sig)) %>% \r\n      pivot_longer(cols = c(z, t), names_to = \"dist_sampling\", \r\n                   values_to = \"prop_menolak\") %>% \r\n      mutate(persen_menolak = paste0(round(prop_menolak * 100, 2),\r\n                                      \"%\"))\r\n    \r\n    sig <- input$tingkat_sig\r\n    x_maks <- max(data_stat$prop_menolak, sig)\r\n    x_min <- min(data_stat$prop_menolak, sig)\r\n    x_range <- x_maks - x_min\r\n    plot_range <- c(x_min - x_range / 4,\r\n                    x_maks + x_range / 4)\r\n    \r\n    slsh_persen <- round(abs(data_stat$prop_menolak[1] - data_stat$prop_menolak[2]) * 100, 2)\r\n    pos_x <- data_stat$prop_menolak[2] + slsh_persen / 200\r\n    ggplot(data_stat) +\r\n      geom_segment(aes(x = prop_menolak, xend = sig,\r\n                       y = dist_sampling, yend = dist_sampling,\r\n                       col = dist_sampling),\r\n                   show.legend = FALSE, linewidth = 5,\r\n                   alpha = .6) +\r\n      geom_segment(aes(x = sig, xend = sig,\r\n                       y = 0, yend = Inf),\r\n                   linewidth = 3, alpha = .6) +\r\n      geom_segment(aes(x = prop_menolak[1], xend = prop_menolak[2],\r\n                       y = factor(1), yend = factor(1)),\r\n                   show.legend = FALSE, linewidth = 5, color = \"#7570b3\",\r\n                   alpha = .2) +\r\n      geom_point(aes(x = prop_menolak, y = factor(1)),\r\n                 size = 8, color = \"#7570b3\") +\r\n      geom_point(aes(x = prop_menolak,\r\n                     y = dist_sampling,\r\n                     col = dist_sampling),\r\n                 size = 8) +\r\n      geom_label(aes(x = prop_menolak, y = dist_sampling,\r\n                     label = persen_menolak, col = dist_sampling),\r\n                 fill = \"white\", fontface = \"bold\", size = 5,\r\n                 nudge_y = .25, label.r = unit(0.1, \"lines\"),\r\n                 show.legend = FALSE) +\r\n      geom_label(aes(x = pos_x, y = factor(1),\r\n                     label = paste0(slsh_persen, \"%\")),\r\n                 color = \"#7570b3\", fill = \"white\", fontface = \"bold\",\r\n                 size = 5, label.r = unit(0.1, \"lines\"),\r\n                 show.legend = FALSE) +\r\n      scale_x_continuous(labels = label_percent(scale = 100),\r\n                         limits = plot_range) +\r\n      scale_color_brewer(palette = \"Dark2\", name = \"Distribusi sampling\") +\r\n      theme_bw(base_size = 14) +\r\n      theme(legend.position = \"bottom\",\r\n            axis.title.y = element_blank(),\r\n            axis.text.y = element_blank(),\r\n            axis.ticks.y = element_blank()) +\r\n      labs(x = \"Persentase\")\r\n  })\r\n  \r\n  ## Teks selisih UH ----\r\n  output$teks_selisih_uh_zt <- renderText({\r\n    data_stat <- stat_set_sampel()\r\n    data_stat <- data_stat %>% \r\n      select(id_sampel, z_sig, t_sig) %>% \r\n      summarise(z = mean(z_sig), t = mean(t_sig)) %>% \r\n      pivot_longer(cols = c(z, t), names_to = \"dist_sampling\", \r\n                   values_to = \"prop_menolak\") %>% \r\n      mutate(persen_menolak = paste0(round(prop_menolak * 100, 2),\r\n                                      \"%\"))\r\n    \r\n    sig <- input$tingkat_sig\r\n    k <- input$banyak_sampel\r\n    slsh_persen <- round(abs(data_stat$prop_menolak[1] - data_stat$prop_menolak[2]) * 100, 2)\r\n    \r\n    paste0(\"Gambar 4.a: Perbedaan persentase sampel yang menolak hipotesis nol antara uji hipotesis yang menggunakan distribusi z dan t. Perbedaan tersebut kurang lebih sebesar \", slsh_persen, \"%.\")\r\n  })\r\n  \r\n  \r\n  ## Plot perwakilan sampel uh ----\r\n  output$plot_wakil_sampel_uh <- renderPlot({\r\n    rerata_pop <- input$rerata_pop\r\n    data_sampel <- rep_membuat_set_sampel(input$banyak_sampel,\r\n                                          input$ukuran_sampel,\r\n                                          input$rerata_pop,\r\n                                          input$sigma_pop)\r\n    data_stat <- stat_set_sampel()\r\n    data_stat <- data_stat %>% \r\n      mutate(menolak = ifelse(z_sig == FALSE & t_sig == FALSE,\r\n                               0, ifelse(z_sig == TRUE & t_sig == FALSE, \r\n                                         1, 2))) %>% \r\n      group_by(menolak) %>% \r\n      slice_sample(n = 5, replace = FALSE)\r\n    data_stat_simpel <- data_stat %>% \r\n      select(id_sampel, rerata, se, menolak)\r\n    \r\n    no_sampel <- data_stat$id_sampel\r\n    \r\n    data_sampel_wakil <- data_sampel %>% \r\n      filter(id_sampel %in% no_sampel)\r\n    data_sampel_wakil <- left_join(data_sampel_wakil, data_stat_simpel,\r\n                                   by = \"id_sampel\")\r\n    data_sampel_wakil %>% \r\n      ggplot(aes(x = fct_reorder(factor(id_sampel), -menolak),\r\n                 y = nilai,\r\n                 color = factor(menolak))) +\r\n      geom_violin(fill = \"whitesmoke\", linewidth = .75) +\r\n      geom_point(size = 3, alpha = .6) +\r\n      geom_crossbar(stat = \"summary\", color = \"black\",\r\n                    width = .5, fatten = 3) +\r\n      stat_summary(fun = \"mean\", geom = \"point\", color = \"darkred\",\r\n                   size = 5) +\r\n      geom_hline(yintercept = rerata_pop,\r\n                 linewidth = 1, linetype = \"dashed\") +\r\n      theme_bw(base_size = 14) +\r\n      scale_color_manual(values = c(\"2\" = \"#d95f02\",\r\n                                    \"1\" = \"#7570b3\",\r\n                                    \"0\" = \"#1b9e77\")) +\r\n      theme(legend.position = \"none\") +\r\n      labs(x = \"ID Sampel\", y = \"Nilai\")\r\n  })\r\n  \r\n  ## Teks perwakilan sampel UH ----\r\n  output$teks_wakil_sampel_uh <- renderText({\r\n    rerata_pop <- input$rerata_pop\r\n    data_sampel <- rep_membuat_set_sampel(input$banyak_sampel,\r\n                                          input$ukuran_sampel,\r\n                                          input$rerata_pop,\r\n                                          input$sigma_pop)\r\n    data_stat <- stat_set_sampel()\r\n    data_stat <- data_stat %>% \r\n      mutate(menolak = ifelse(z_sig == FALSE & t_sig == FALSE,\r\n                               0, ifelse(z_sig == TRUE & t_sig == FALSE, \r\n                                         1, 2))) %>% \r\n      group_by(menolak) %>% \r\n      slice_sample(n = 5, replace = FALSE)\r\n    data_stat_simpel <- data_stat %>% \r\n      select(id_sampel, rerata, se, menolak)\r\n    \r\n    no_sampel <- data_stat$id_sampel\r\n    \r\n    data_sampel_wakil <- data_sampel %>% \r\n      filter(id_sampel %in% no_sampel)\r\n    data_sampel_wakil <- left_join(data_sampel_wakil, data_stat_simpel,\r\n                                   by = \"id_sampel\")\r\n    n <- input$ukuran_sampel\r\n    n_0 <- sum(data_sampel_wakil$menolak == 0) / n\r\n    n_1 <- sum(data_sampel_wakil$menolak == 1) / n\r\n    n_2 <- sum(data_sampel_wakil$menolak == 2) / n\r\n    n_total <- n_0 + n_1 + n_2\r\n    \r\n    if (n_1 > 0 & n_2 > 0) {\r\n      paste(\"Gambar 4.b: Distribusi \", n_total, \" perwakilan sampel. Diagram violin berwarna oranye menunjukkan distribusi sampel-sampel yang menjadi bukti penolakan terhadap hipotesis nol, baik menggunakan distribusi z maupun t sebagai distribusi samplingnya. Diagram ungu menunjukkan sampel-sampel yang menolak hipotesis nol ketika menggunakan distribusi z sebagai distribusi samplingnya, tetapi tidak menolak hipotesis tersebut ketika distribusi samplingnya adalah distribusi t. Terakhir, diagram hijau merepresentasikan sampel-sampel yang tidak menyebabkan penolakan terhadap hipotesis nol.\")\r\n    } else if (n_1 == 0 & n_2 > 0) {\r\n      paste0(\"Gambar 4.b: Distribusi \", n_total, \" perwakilan sampel. Diagram violin berwarna oranye menunjukkan distribusi sampel-sampel yang menyebabkan penolakan terhadap hipotesis nol, baik menggunakan distribusi z maupun t sebagai distribusi samplingnya. Diagram hijau merepresentasikan sampel-sampel yang gagal menolak hipotesis nol.\")\r\n    } else if (n_1 == 0 & n_2 == 0) {\r\n      paste0(\"Gambar 4.b: Distribusi \", n_total, \" perwakilan sampel. Diagram violin tersebut menunjukkan distribusi beberapa perwakilan sampel yang tidak menjadi bukti penolakan hipotesis nol.\")\r\n    } else if (n_1 > 0 & n_2 == 0) {\r\n      paste0(\"Gambar 2.b: Distribusi \", n_total, \" perwakilan sampel. Diagram violin berwarna ungu menunjukkan sampel-sampel yang menolak hipotesis nol ketika menggunakan distribusi z sebagai distribusi samplingnya, tetapi tidak menolaknya ketika distribusi samplingnya adalah distribusi t. Diagram hijau menunjukkan distribusi beberapa perwakilan sampel yang tidak menjadi bukti penolakan hipotesis nol.\")\r\n    }\r\n    \r\n  })\r\n  \r\n}\r\n# Objek aplikasi Shiny ----\r\nshinyApp(ui = ui, server = server)","type":"text"}]
